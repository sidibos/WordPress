<?php
/*
########################################################
Provides authentication abstraction layer, in the form of
a function to check whether a user has access to a tab.

Also provides error pages.

Accepted Inputs:
none

12th May 2005
Rowan Beentje
Assanka Ltd
########################################################
*/

if (!function_exists('checkIfAuth') and !defined('SUPPRESS_CHECKIFAUTH')) {
	function checkIfAuth($tabname, $username="", $autoerror = true, $validPermissionLevels = array()) {

		global $db, $page, $authcache;

		// By default, assume no access
		$level = false;
		
		// Instantiate the auth cache if it doesn't already exist
		if (!isset($authcache)) $authcache = array();

		// If no username is provided, check for the htaccess username
		// to determine if the current user is logged in
		if (!$username) {
			if (isset($_SERVER["PHP_AUTH_USER"])) {
				$username = $_SERVER["PHP_AUTH_USER"];
			} elseif (isset($_SERVER["REMOTE_USER"])) {
				$username = $_SERVER["REMOTE_USER"];
			} else {
				return false;
			}
		}

		// Populate cache for this user if it's not already set
		if (!isset($authcache[$username])) {
			$authcache[$username] = array();
			$usercheck = $db->queryRow("SELECT * FROM cfg_adminusers WHERE htaccessuser='".$db->sqlenc($username)."'", true);
			if ($usercheck) {
				foreach ($usercheck as $key=>$value) {
					if (preg_match("/permissions_(.*?)(_role)?$/i", $key, $matches) and ($value != "no access")) $authcache[$username][$matches[1]] = $value;
				}
			}
		}
		
		// If a username is found, and a tab name provided, use the two to
		// find if the user is authenticated for the tab
		if (($username) && ($tabname)) {
			$tabname = preg_replace("/[^0-9a-z]+/i", "_", strtolower($tabname));
			if (!empty($authcache[$username][$tabname])) $level = $authcache[$username][$tabname];
		}
		
		// If $validPermissionLevels was set, check the level
		if (count($validPermissionLevels)) {
			if (!is_array($validPermissionLevels)) $validPermissionLevels = array($validPermissionLevels);
			if (!in_array($level, $validPermissionLevels)) $level = false;
		}

		// If autoerror is true and user doesn't have valid permission, trigger error
		if ((!is_array($validPermissionLevels) || !$level) && $autoerror) {
			if ($username) {
				$msg = "<h2>Access restricted</h2>";
				$msg .= "<p style=\"padding: 10px\">You do not have permission to access this section.  Please contact your system administrator for more information and to add the necessary permission to your user account.</p>";
				if ($page) {
					$page->addContent("content", $msg);
					$page->render();
				} else {
					echo $msg;
				}
				exit;
			} else {
		
				// If the user is not logged in, forward the user to the admin homepage to prompt them to log in,
				// with an appropriate alert.
				$page->alert("You have been redirected to the home page as you were not logged in.  <a href=\"".$_SERVER["REQUEST_URI"]."\">Click here to return to the requested page</a>.");
				header("Location: ".$_SERVER["ADMIN_AREA_PATH"]);
				exit;
			}
		}
		
		// Otherwise, return the authentication level - false or valid level
		return $level;
	}
}
?>
