<?php
/*
########################################################
Stats page for Visitors

Upgraded to core v3 on 19th April 2006 by RB.

17 July 2005
Robert Shilston
Assanka Ltd
########################################################
*/

require_once("statslib");
if (!checkIfAuth("statistics", "", false, array("sbe", "premium", "server"))) {
	outputPremiumGuideAndExit(&$page);
}

$page->waitmsg("compilingresults");

// Create a new data table
$tb = new datatable("visitors", "visitor");

// Define columns
$tb->addColumn("ip", "Hostname or IP address", "ASC");
$tb->addColumn("pages", "Pages", "DESC", $tb->RIGHTALIGN);
$tb->addColumn("hits", "Hits", "DESC", $tb->RIGHTALIGN);
$tb->addColumn("bandwidth", "Data transferred", "DESC", $tb->RIGHTALIGN);
$tb->addColumn("lastvisit", "Last visit", "DESC", $tb->RIGHTALIGN);

// Define filters
$tb->addFilter("startdate", "Start month (mm/yyyy)", "partialtext", "s", false, date('m/Y'));
$tb->addFilter("enddate", "End month (mm/yyyy)", "partialtext", "e", false, date('m/Y'));
$tb->addFilter("hostfilter", "Match hostname or IP", "partialtext", 'h', false, "");

// Set default sort-by column
$tb->setSort("pages");

// Process the date filter
$startdate = Common::convertHumanTime($tb->getFilterValue("startdate"));
$enddate = Common::convertHumanTime($tb->getFilterValue("enddate"));
checkDateFilters(&$startdate, &$enddate, &$page);

$counts = getVisitors(date("mY", $startdate), date("mY", $enddate));

// Filter the table if needed
$hostfilt = $tb->getFiltervalue("hostfilter");
if ($hostfilt) {
	foreach ($counts AS $key=>$data) {
		if (strpos(strtolower($data["ip"]), strtolower($hostfilt)) === false) unset($counts[$key]); 
	}
}

// Grab a count of the numbers of pages left before pagination, and page count
$numresults = count($counts);
$numpages = ceil($numresults/$tb->rowsperpage);

// Deal with sorting the data...
sortArrayBasedTable(&$counts, &$tb);

// Define page number, default to page 1
$pno = (is_numeric($_GET["p"])) ? $_GET["p"] : 1;

// Paginate the pages list (!)
if (count($counts) > $tb->rpp) {
	$counts = array_slice($counts, (($pno * $tb->rowsperpage) - $tb->rowsperpage), $tb->rowsperpage);
}

// Grab a timestamp to allow two seconds of hostname lookups
$starttime = array_sum(explode(" ", microtime()));

foreach ($counts as $data) {
	
	// Lookup the visitor if we're within the two secs
	//if (array_sum(explode(" ", microtime())) < ($starttime + 2)) {
	//	$hostname = gethostbyaddr_timeout($data["ip"]);
	//	if ($hostname != $data["ip"]) $data["ip"] = $data["ip"]." (".$hostname.")";
	//}
	
	$data["pages"] = number_format($data["pages"]);
	$data["hits"] = number_format($data["hits"]);
	$data["bandwidth"] = Common::dispBytes($data["bandwidth"]);
	if ($data["lastvisit"]) {
		$data["lastvisit"] = substr($data["lastvisit"], 4, 2)."/".substr($data["lastvisit"], 6, 2)."/".substr($data["lastvisit"], 0, 4);
		$data["lastvisit"] = date(($_SERVER["PHPDATE"])?$_SERVER["PHPDATE"]:"d M Y", strtotime($data["lastvisit"]));
	} else {
		$data["lastvisit"] = "-";
	}
	$tb->addRow($data, false);
}

// Construct the page
$page->addContent("content", $tb->outputTable());
$page->addContent("context", $db->outputPagination($numresults, $numpages, $pno, "visitor"));
$page->addContent("context", $tb->outputFilterform());
$page->addContent("context", getStatsDateString($startdate, $enddate));
$page->addContent("context", file_get_contents("/assanka/web/admin/v3/stats/html/visitorsinfo"));

$page->render();
?>