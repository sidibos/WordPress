<?xml version="1.0" encoding="UTF-8"?>
 <project name="assanka" basedir="." default="app">

    <property name="builddir" value="${ws}/build" />
    <property name="phpunit_command" value="phpunit" />
	<available file="/etc/php-debugging/php.ini" property="phpunit_command" value="php -c /etc/php-debugging/php.ini /usr/bin/phpunit" />


    <target name="build">
        <phingcall target="clean" />
        <phingcall target="prepare" />
        <phingcall target="copy" />
    </target>

	<target name="fast-build-ci">
		<phingcall target="clean" />
        <phingcall target="prepare" />
		<parallel threadCount="5">
			<phingcall target="copy" />
			<phingcall target="phpunit" />
			<phingcall target="busterjs" />
			<phingcall target="phpcpd" />
		</parallel>
	</target>

    <target name="clean">
        <echo msg="Clean..." />
        <delete dir="${builddir}" />
    </target>

    <target name="prepare">
        <echo msg="Prepare..." />
        <mkdir dir="${builddir}" />
        <mkdir dir="${builddir}/logs" />
        <mkdir dir="${builddir}/logs/coverage" />
        <mkdir dir="${builddir}/logs/jscoverage" />
        <mkdir dir="${builddir}/docs" />
        <mkdir dir="${builddir}/src" />
		<phingcall target="installdependencies">
			<property name="dependencyarguments" value="--no-dev" />
		</phingcall>
    </target>
    <target name="installdependencies">
		<exec dir="${ws}" passthru="true" command="composer install ${dependencyarguments}" checkreturn="true" />
    </target>

    <target name="copy">
        <echo msg="Copying app" />
    	<copy todir="${builddir}/src/" >
            <filterchain>
                <replacetokens begintoken="@@" endtoken="@@">
                    <token key="deploy_module" value="${deploy_module}" />
                    <token key="deploy_revision" value="${deploy_revision}" />
                    <token key="deploy_version" value="${deploy_version}" />
                </replacetokens>
            </filterchain>
    		<fileset dir="${ws}">
    			<include name="**/*" />
    			<exclude name="build/" />
				<exclude name="build.xml" />
				<exclude name=".git/" />
				<exclude name=".gitignore" />
				<exclude name="_tests/" />
				<exclude name="devbuild.sh" />
    		</fileset>
    	</copy>

		<!-- Ensure that the root publish directory for /assanka is 755.  This is so that ssh works correctly.  This is also set up in Puppet -->
		<exec command="chmod 755 ${builddir}/src" />

        <echo msg="Done copying app" />
    </target>


	<!-- Setup for dev sandboxes -->
 	<target name="devbuild">
 		<echo msg="Setting up sandbox..." />
 		<phingcall target="installdependencies">
			<property name="dependencyarguments" value="--dev" />
		</phingcall>
 	</target>

    <!-- PHP copy/paste analysis -->
    <target name="phpcpd">
        <echo msg="PHP Copy/Paste Detector: ${ws}/build/app > ${builddir}/logs/pmd.xml" />
        <exec command="phpcpd --log-pmd ${builddir}/logs/pmd.xml --verbose ${ws}/build/app" escape="false" />
    </target>

    <!-- PHP dependency checker -->
    <target name="pdepend">
        <echo msg="PHP Depend..." />
        <exec command="pdepend --jdepend-xml=${builddir}/logs/jdepend.xml --summary-xml=${builddir}/logs/jdepend-summary.xml --jdepend-chart=${builddir}/logs/jdepend-chart.svg --overview-pyramid=${builddir}/logs/jdepend-pyramid.svg ${ws}/build/app" escape="false" />
    </target>

    <!-- PHP CodeSniffer -->
    <target name="phpcs">
        <echo msg="PHP CodeSniffer..." />
        <exec command="phpcs --standard=ZEND --report=checkstyle ${ws}/build/app > ${builddir}/logs/checkstyle.xml" escape="false" />
    </target>

    <!-- PHP Docs -->
    <target name="phpdoc">
        <echo msg="PHP Docs..." />
        <exec command="phpdoc run --extensions='*' --ignore='*.html,*.js,*.log,*.php' --title=assanka -d ${ws}/helpers -t /var/lib/jenkins/project_builds/assanka/docs" escape="false" />
    </target>

    <!-- Unit Tests & coverage analysis -->
    <target name="phpunit">
		<echo msg="Running PHPUnit from XML" />
		<echo msg="PHP Unit running on ${ws}/_tests/phpunit.xml" />
		<exec dir="${ws}/_tests/" command="${phpunit_command}" passthru="true" checkreturn="true" />
    </target>

    <target name="busterjs">
        <exec dir="${ws}/_tests" command="buster test -r xml > ../build/logs/jstestresults.xml" passthru="true" />
        <!-- Comment this out as buster-coverage isn't running
        <exec dir="${ws}/build/logs/jscoverage" command="genhtml CoreTests-coverage.lcov -o ." passthru="true" checkreturn="true" />
        -->
    </target>

    <!-- Continuous Deployment -->
    <target name="autodeploy">
        <echo msg="Deploying to the UAT environment..." />
        <exec command="yes c | /usr/local/bin/deployer --m=${GIT_URL} --environment-groups --e=uat --r=${GIT_COMMIT} --no-mail --no-dryrun --no-deploytimetag --delay-updates" passthru="true" checkreturn="true" />
    </target>
</project>
