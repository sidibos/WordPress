<?php
/**
 * Collects information required to create a new page. This script
 * does not collect the content of the page, just the metadata,
 * which it uses to create the page. The administrator can then edit
 * it to add the content.
 *
 * Accepted Inputs: none
 *
 * @copyright The Financial Times Limited [All Rights Reserved]
 */

require_once("../lib/inc/global");



// This file is deprecated, and should no longer be in use.  This error designed to catch cases where it is still being used.
trigger_error('Deprecated code in use', E_USER_DEPRECATED);



$auth->checkRights("outline.user");

// Save the location of parent page, if any, for redisplay of index.  But
// ignore homepage entries, as the homepage is special...
if (!empty($_GET["tag"])) {
	if ($_GET["tag"] == "homepage") $_GET["tag"] = "";
	if ($_GET["tag"]) outlineSaveLastSelectedPage($_GET["tag"]);
}

// Select the name of the current site
$siteName = $_SESSION["outline"]["sites"][$_SESSION["outline"]["currentsite"]]["name"];

// Construct the form with submitted or inputted data
$form = new inputform("newpage", "POST", "pages/new");

$group1 = new simplefieldgroup(&$form);

// Add the content displaying the template selection
$templatehtml = "<table class=\"oltemplates\">";
$layouts = $db->query("SELECT id, name, description FROM out_layouts");

// Outline extension: use a different layout query
$extendarray = array(&$layouts);
outlineExtend("newPageGotLayouts", $extendarray);

$oddcol = true;
while ($row = $db->getRow($layouts)) {
	
	// Outline extension: provide altered HTML for the layout row
	$extendarray = array(&$oddcol, &$templatehtml, &$row);
	$result = outlineExtend("startGenerateLayoutHTML", $extendarray);
	if (is_bool($result) and $result) continue;

	// Normal HTML for layout row (i.e. no extension)
	if ($oddcol) $templatehtml .= "<tr>";
	$templatehtml .= "<td><input type=\"radio\" id=\"radio".$row["id"]."\" name=\"layout\" value=\"".$row["id"]."\"".((!empty($_POST["layout"]) and $_POST["layout"] == $row["id"])?" checked=\"checked\"":"")."></td>";
	$templatehtml .= "<td><label for=\"radio".$row["id"]."\"><img src=\"lib/img/layouts/".$row["id"].".png\" width=\"72\" height=\"54\" border=0></label></td>";
	$templatehtml .= "<td style=\"width: 40%\"><label for=\"radio".$row["id"]."\"><strong>".$row["name"]."</strong><br>".$row["description"]."</label></td>";
	if (!$oddcol) $templatehtml .= "</tr>";
	$oddcol = !$oddcol;
}
$templatehtml .= (($oddcol)?"":"<td colspan=\"3\">&nbsp;</td></tr>")."</table>";

$group1->addContent($templatehtml);

$group1->addText("title", "Title", "t", true, false, 150);
	
// TODO:RB:20070724: This should really be done by a) making field groups editable once they're created, and b) passing the field group by reference to a CMS-altering function.  But FELE requires now, so...
if (empty($outlineExtend["tagMaxLength"])) $outlineExtend["tagMaxLength"] = 30;
if (empty($outlineExtend["tagValidationRegex"])) $outlineExtend["tagValidationRegex"] = "/^[a-z0-9\-]+$/";
$group1->addText("tag", "Tag", "a", true, $outlineExtend["tagValidationRegex"], $outlineExtend["tagMaxLength"]);
$group1->addText("parenttagvis", "Section", false, false, false, 250);
$group1->addHidden("parenttag");
if (count($_SESSION["outline"]["sites"]) > 1) $group1->addText("sitename", "Site", false, false, false, 200);
$group1->addHidden("isolanguage", $_SESSION["outline"]["language"]);
$group1->addHidden("siteid", $_SESSION["outline"]["currentsite"]);

// Define help text
$form->addHelptext("title", "Enter a title that describes the page, preferably briefly, so that when presented to the user in a large font size it will not need to wrap.  It is best to stick to fewer than ten words, and even fewer if the title is used in the site navigation.");
$form->addHelptext("tag", "Enter a page tag which is used to create a URL for the page - the address that must be typed into the browser to load the page.  This must be unique to the page, and should reflect its content, but at the same time be as short as possible.  Avoid any punctuation, spaces, numbers or uppercase characters which will make the link harder to type, and keep the tag lowercase.  'contact', 'findingus', 'whoweare' are all good tags.");
$form->addHelptext("parenttagvis", "Enter the part of the site this page should be created in, using the \"Browse...\" button and selecting a page or folder.  This page will then be grouped inside the selected folder for the purposes of linking to the page or displaying it in site navigation.");

// Add action buttons
$page->addAction("Create", array("javascript"=>"document.frmnewpage.submit()"));
$page->addAction("Cancel", "pages/");

// Check for submitted information, and check any using the core validation
if ($_POST) {

	// the visible parent tag isn't submitted, so restore it
	if (!empty($_POST["parenttag"]) and ($_POST["parenttag"] != "/")) $_POST["parenttagvis"] = $_POST["parenttag"]."/";
	if (!empty($siteName)) $_POST["sitename"] = $siteName;

	// if a parent has been specified, check the tag
	if (!empty($_POST["parenttag"])) {
		$row = $db->queryRow("SELECT tag, itemid FROM out_localcontent l LEFT JOIN out_items i ON l.itemid=i.id WHERE tag=%s AND languageisocode=%s AND siteid=%s", $db->sqlenc($_POST["parenttag"]), $db->sqlenc($_POST["isolanguage"]), $db->sqlenc($_POST["siteid"]));
		if (!$row) trigger_error("Error checking tag from parent page", E_USER_ERROR);
		$tag = $row["tag"]."/".$_POST["tag"];
		$parentid = $row["itemid"];
	} else {
		$tag = $_POST["tag"];
		$parentid = "0";
	}
	
	// With the tag constructed, check the user has permission to create the item in that location
	if (!outlineCheckIfAuth("createpage", $tag, $_SESSION["outline"]["adminuser"], false, $_POST["siteid"])) $group1->makeInputInvalid("parenttagvis", "You do not have permission to create a page in the folder selected.");
	
	// Check that tag is not already in use on this site
	if ($db->querySingle("SELECT l.id FROM out_items i LEFT JOIN out_localcontent l ON i.id=l.itemid WHERE l.tag=%s AND i.siteid=%s AND l.languageisocode=%s", $tag, $_POST["siteid"], $_POST["isolanguage"])) {
		$group1->makeInputInvalid("tag", "The tag name you gave is already in use for a page in this section and site - you need to specify a unique tag for each page in any given section so that every page has a different URL.");
	}

	$group1->addData($_POST);
	
	if ($group1->inputValid()) {

		// Save the location of this page for redisplay of index
		outlineSaveLastSelectedPage($tag);
		
		// Pull out the content layout if a layout was selected
		if (!empty($_POST["layout"])) $contenthtml = $db->querySingle("SELECT content FROM out_layouts WHERE id=%s", $db->sqlenc($_POST["layout"]));
	
		// If the account has draft privileges, create the new version as a draft -
		// the advantage of this is it's not visible until published.  Without
		// draft functionality, the default page gets created as-is.
		if (outlineIsFunctionalityEnabled("drafts")) {
			$db->disableInjectionChecking();
			$db->query("INSERT INTO out_items SET siteid='".$db->sqlenc($_POST["siteid"])."', parentid=".$parentid.", type='page', sortindex=1, visibility='visible'");
			$itemID = $db->getInsertId();
			$db->query("INSERT INTO out_localcontent SET itemid=".$db->getInsertId().", languageisocode='".$_POST["isolanguage"]."', tag='".$db->sqlenc($tag)."', isuptodate=1");
			$localContentID = $db->getInsertId();
			$db->query("INSERT INTO out_versions SET localcontentid=".$localContentID.", authoruser='".$_SESSION["outline"]["adminuser"]."', draftuser='".$_SESSION["outline"]["adminuser"]."', versionnumber=0, title='".$db->sqlenc($_POST["title"])."', html='".$db->sqlenc(empty($contenthtml)?"":$contenthtml)."', datecreated=NOW(), islive=0");
			$versionID = $db->getInsertId();
			$db->enableInjectionChecking();
		} else {
			$db->disableInjectionChecking();
			$db->query("INSERT INTO out_items SET siteid='".$db->sqlenc($_POST["siteid"])."', parentid=".$parentid.", type='page', sortindex=1, visibility='inaccessible'");
			$itemID = $db->getInsertId();
			$db->query("INSERT INTO out_localcontent SET itemid=".$db->getInsertId().", languageisocode='".$_POST["isolanguage"]."', tag='".$db->sqlenc($tag)."', isuptodate=1");
			$localContentID = $db->getInsertId();
			$db->query("INSERT INTO out_versions SET localcontentid=".$localContentID.", authoruser='".$_SESSION["outline"]["adminuser"]."', draftuser=NULL, versionnumber=0, title='".$db->sqlenc($_POST["title"])."', html='".$db->sqlenc(empty($contenthtml)?"":$contenthtml)."', datecreated=NOW(), islive=1");
			$versionID = $db->getInsertId();
			$db->enableInjectionChecking();
		}

		// Outline extension to allow default values for the new item's custom fields
		$extendarray = array($itemID, &$_POST);
		outlineExtend("newPageAfterInsertItem", $extendarray);
	
		if ($db->getRowsAffected()) {
			if (outlineIsFunctionalityEnabled("drafts")) {
				$versionID = $db->getInsertId();
				$db->disableInjectionChecking();
				$db->query("INSERT INTO out_actionlog SET versionid=".$versionID.", user='".$_SESSION["outline"]["adminuser"]."', actiontype='create page', comment='localcontentid ".$localContentID."', date=NOW()");
				$db->enableInjectionChecking();
				$page->redirectAndAlert("Page created successfully as a draft.", "done", "pages/edit?id=".$versionID."&type=draft");
			} else {
				$db->disableInjectionChecking();
				$db->query("INSERT INTO out_actionlog SET versionid=".$versionID.", user='".$_SESSION["outline"]["adminuser"]."', actiontype='create page', comment='localcontentid ".$localContentID."', date=NOW()");
				$db->enableInjectionChecking();
				$page->redirectAndAlert("Page created successfully.", "done", "pages/edit?id=".$localContentID);
			}
		} else {
			trigger_error("Unexpected result", E_USER_ERROR);
		}
	} else {
		$group1->addToForm(true);
		
		// Add an error message
		$page->alert("You did not complete the form correctly.  Please review the fields marked below, and ensure you have read the help text available in the panel on the right.", "error");
	}
} else {
	// Add some default data
	$group1->addData(array("parenttagvis"=>(!empty($_GET["tag"])?$_GET["tag"]."/":""), "parenttag"=>(empty($_GET["tag"])?"":$_GET["tag"]), "sitename"=>$siteName));
	
	// Add a default informational alert
	$page->alert("Choose a layout for your new page, and enter some information about it.  If you don't select a layout a blank page will be created.");
	
	// Add the fieldgroups to the form
	$group1->addToform(false);
}

$page->add("content", $form->outputForm());
$page->add("content", "<script type=\"text/javascript\">$(document).ready(function() {outlineMakeBrowseField($('#frmnewpage_parenttagvis').get(0), 'new', $('#frmnewpage_parenttag').get(0), $('#frmnewpage_siteid').get(0), ''); if ($('#frmnewpage_sitename').length) $('#frmnewpage_sitename').attr('disabled', 'disabled'); olhandler = new OutlineHandler('new');});</script>");
$page->add("context", $form->outputContextHelp());
$page->set("title", "Create new page");
$page->outputHTML();
?>