<?php
/*
########################################################
This page allows adminstration of users within outline,
drawing a list of users from the htpasswd file and
cfg_adminusers table.  Those with access to the cms are
then displayed so that their cms-specific permissions
(in out_permissions) can be altered.

17/05/2005
Rowan Beentje
Assanka Ltd
########################################################
*/

require_once("../lib/inc/global");




// This file is deprecated, and should no longer be in use.  This error designed to catch cases where it is still being used.
trigger_error('Deprecated code in use', E_USER_DEPRECATED);



$outlineUsers = array();

// Check permissions, error if none
$auth->checkRights("outline.administrator");

if (outlineIsFunctionalityEnabled("multiplesites") and $db->querySingle("SELECT COUNT(*) FROM out_sites ORDER BY id ASC") > 1) {
	$multiSite = true;
} else {
	$multiSite = false;
}

$outlineUsers = $auth->getUsersWithRight("outline.user");
foreach ($outlineUsers as $key=>$user) {
	if ($user == "assanka") unset($outlineUsers[$key]);
}

// If viewing as assanka, it is possible that there is nobody authorised
// for access to the cms; if so, display a note.
if (!count($outlineUsers)) {
	$page->alert("There are currently no users with access to Outline.  To add users with access, so that you can then fine-tune their permissions, use the Config tab above to manage admin users.");
	$page->set("title", "Manage users (no users)");
	$page->outputHTML();
	exit;
}

// Switch the array keys with the numeric values, and collect display names and permissions.
$outlineUsers = array_flip($outlineUsers);
foreach ($outlineUsers as $username=>$i) {
	$details = $auth->getDetailsForUser($username);
	$permissionresults = $db->query("SELECT p.tag, p.role, p.siteid, s.name FROM out_permissions p LEFT JOIN out_sites s ON p.siteid=s.id WHERE htaccessuser='".$username."' ORDER BY tag");

	// If there's no results, the default level is publisher
	if (!$db->getNumResults($permissionresults)) {
		if ($multiSite) $permissions = "Publisher for all sites";
		else $permissions = "Publisher";
		
	// One result - list either base level or base level and tag
	} else if ($db->getNumResults($permissionresults) == 1) {
		$row = $db->getRow($permissionresults);
		if ($row["tag"] == "homepage") $row["tag"] = "";
		if ($row["tag"] == "") {
			if ($multiSite and $row["siteid"] == -1) {
				$permissions = ucfirst($row["role"])." for all sites";
			} elseif ($multiSite) {
				$permissions = ucfirst($row["role"])." for the ".$row["name"].((strtolower(substr($row["name"], -4)) == "site")?"":" site");
			} else {
				$permissions = ucfirst($row["role"]);
			}
		} else {
			if ($multiSite and $row["siteid"] == -1) {
				$permissions = ucfirst($row["role"])." in /".$row["tag"]." for all sites";
			} elseif ($multiSite) {
				$permissions = ucfirst($row["role"])." in /".$row["tag"]." for the ".$row["name"].((strtolower(substr($row["name"], -4)) == "site")?"":" site");
			} else {
				$permissions = ucfirst($row["role"])." in /".$row["tag"];
			}
		}
			
	// Multiple results - build an array.
	} else {
		$permissions = array();
		while ($row = $db->getRow($permissionresults)) {
			if ($row["tag"] == "") {
				if ($multiSite and $row["siteid"] == -1) {
					$permissions[] = ucfirst($row["role"])." for all sites";
				} elseif ($multiSite) {
					$permissions[] = ucfirst($row["role"])." for the ".$row["name"].((strtolower(substr($row["name"], -4)) == "site")?"":" site");
				} else {
					$permissions[] = ucfirst($row["role"]);
				}
			} else {
				if ($multiSite and $row["siteid"] == -1) {
					$permissions[] = ucfirst($row["role"])." in /".$row["tag"]." for all sites";
				} elseif ($multiSite) {
					$permissions[] = ucfirst($row["role"])." in /".$row["tag"]." for the ".$row["name"].((strtolower(substr($row["name"], -4)) == "site")?"":" site");
				} else {
					$permissions[] = ucfirst($row["role"])." in /".$row["tag"];
				}
			}
		}
		$permissions = join(", ", $permissions);
	}

	$outlineUsers[$username] = array("username"=>$username, "name"=>((!empty($details["displayname"]))?$details["displayname"]:$username), "permissions"=>$permissions);
}

// Associatively sort the array into alphabetical order
usort($outlineUsers, "userNameComparison");

// Create a data table to display the information
$tb = new datatable("users", "user", 200, false, false);

// Define columns
$tb->addColumn("icon", "", false, false, 18);
$tb->addColumn("name", "Name", "ASC", false, 250);
$tb->addColumn("permissions", "Permissions", "DESC");

// Handling sorting, filtering and pagination - TODO:RB:20080129

// Now cycle through the users, adding a row for each
foreach ($outlineUsers as $outlineUser) {
	$outlineUser["icon"] = "<img src=\"lib/img/icons/icon16_key.gif\" alt=\"*\" />";
	if (is_array($outlineUser["permissions"])) {
		$permissions = $outlineUser["permissions"];
		$outlineUser["permissions"] = "Multiple Levels";
		$childrows = array();
		foreach($permissions as $perm) {
			$childrows[] = array("icon"=>"", "name"=>"", "permissions"=>$perm);
		}
	} else {
		$childrows = false;
	}
	$tb->addRow($outlineUser, array("name"=>"users/edit?id=".$outlineUser["username"]), $childrows);
}

$page->alert("Click on a user's name to edit their access permissions across the site.");

$page->add("content", $tb->outputTable());
$page->outputHTML();


function userNameComparison($user1, $user2) {
	$comp = strcmp($user1["name"], $user2["name"]);
	if (!$comp) return strcmp($user1["username"], $user2["username"]);
	else return $comp;
}
?>