<?php
require_once("../appglobal");




// This file is deprecated, and should no longer be in use.  This error designed to catch cases where it is still being used.
trigger_error('Deprecated code in use', E_USER_DEPRECATED);




$form = new inputform("supportnew");
$group1 = new simplefieldgroup(&$form);
$group1->addField("id", Model::$fields["id"]);
$group1->addField("title", Model::$fields["title"]);
$group1->addField("description", Model::$fields["description"]);
$group1->addField("isdeveloper", array("datatype"=>"hidden"));
$group1->addField("originalrequestauthor", array("datatype"=>"hidden"));

// Pull out projects, to see what to output
$sdb->query("SELECT client, project, name, supportpkg FROM projects ". (($_SESSION["support"]["permissions"]) ? "WHERE ".$_SESSION["support"]["permissions"]:"") . " ORDER BY client ASC, project ASC");
if ($sdb->getNumResults() == 1) {
	$row = $sdb->getRow();
	$clientprojectpackages = "'".$row["supportpkg"]."'";
	Model::$fields["projectcode"]["options"] = array($row["client"]."-".$row["project"] => $row["client"]."-".$row["project"].": ".$row['name']); Model::$fields["projectcode"]["inputtype"] = "hidden";
} else {
	$projcodeopts = array();
	while ($row = $sdb->getRow()) {
		$projcodeopts[$row["client"]."-".$row["project"]] = $row["client"]."-".$row["project"].": ".$row['name'];
		$clientprojectpackages[] = $row["supportpkg"];
	}
	$clientprojectpackages = "'".implode("', '", $clientprojectpackages)."'";
	Model::$fields["projectcode"]["options"] = $projcodeopts;
}

$page->set("jsarray", $clientprojectpackages);

$group1->addField("projectcode", Model::$fields["projectcode"]);
$group1->addField("importance", Model::$fields["importance"]);
if (function_exists("curl_init")) $group1->addField("filename", Model::$fields["filename"]);

if (empty($_SESSION["support"]["isdeveloperonanyproject"])) {
	Model::$fields["notifycontacts"]["datatype"] = "hidden";
	Model::$fields["requestauthor"]["datatype"] = "hidden";
}
$group1->addField("notifycontacts", Model::$fields["notifycontacts"]);
if ($_POST and !empty($_POST["projectcode"])) {
	$reqproject = $sdb->queryRow("SELECT client, project, supportpkg FROM projects ". (($_SESSION["support"]["permissions"]) ? "WHERE (".$_SESSION["support"]["permissions"].") AND ":" WHERE ") . "CONCAT(client, '-', project)='".$sdb->sqlenc($_POST["projectcode"])."'");
	if ($reqproject) {
		$users = array();
		$result = $sdb->query("SELECT u.displayname AS name FROM permissions p INNER JOIN users u ON p.userid=u.id WHERE u.displayname != 'Assanka' AND (p.client IS NULL OR (p.client = '".$sdb->sqlenc($reqproject["client"])."' AND (p.project IS NULL OR p.project = '".$sdb->sqlenc($reqproject["project"])."'))) GROUP BY u.displayname ORDER BY u.displayname ASC");
		while ($user = $sdb->getRow($result)) {
			$users[$user["name"]] = $user["name"];
		}
	} else {
		$users = array($_SESSION["support"]["username"]=>$_SESSION["support"]["username"]);
	}
	Model::$fields["requestauthor"]["options"] = $users;
} else {	
	Model::$fields["requestauthor"]["options"] = array($_SESSION["support"]["username"]=>$_SESSION["support"]["username"]);
}
$group1->addField("requestauthor", Model::$fields["requestauthor"]);	

// Add action buttons
$page->addAction("Save", array("javascript"=>"document.getElementById('frmsupportnew').submit()"));
$page->addAction("Cancel", "requests/");

// Check for submitted information, and check any using the core validation
if ($_POST) {
	$group1->addData($_POST);
	$data = $group1->getSubmittedData();
	
	// For non-developers enforce notifications and author
	if (empty($_SESSION["support"]["isdeveloperonanyproject"])) {
		$data["notifycontacts"] = true;
		$data["requestauthor"] = $_SESSION["support"]["username"];
	}

	if (preg_match("/^([0-9a-f]{8})$/i", trim($data["title"]))) {
		$hash = strtolower(trim($data["title"]));
		$request = $sdb->queryRow("SELECT r.id, r.status FROM requests r LEFT JOIN grouphashes gh ON r.id=gh.requestid WHERE gh.code='".$hash."'");
		if (!$request) {
			$group1->makeInputInvalid("title", "The error tracking code you entered ($hash) was not recognised.  Try again or consider raising a standard request with a descriptive title.");
		}
	}

	if ($group1->checkValidity()) {
		
		$project = $sdb->queryRow("SELECT * FROM projects WHERE CONCAT(client, '-', project)='".$sdb->sqlenc($_POST["projectcode"])."'");
		if (!$project) trigger_error("Project not found", E_USER_ERROR);

		// Move any uploaded files to tarragon
		$uploadedfilenewname = "";
		if (!empty($data["filename"])) {
			if(!($uploadedfilenewname = moveFileToNewServer($data["filename"]))) {
				$page->alert("Could not attach file to support request - error moving the uploaded file to permanent storage","warning");
				unset($data["filename"]);
			}
		}
		
		$authoruserid = $sdb->querySingle('SELECT id FROM users WHERE displayname = {requestauthor|nokey}', $data);

		// If an error tracking code has been submitted, use the matching support request
		if (!empty($request)) {
			$sdb->query("INSERT INTO comments SET filename='".$db->sqlenc($uploadedfilenewname)."', requestid=".$request["id"].", userid='".$sdb->sqlenc($_SESSION["support"]["userid"])."', authoruserid=".($authoruserid ? $authoruserid : $auth->user['id']) .", comment='".$sdb->sqlenc($data["description"])."', datecreated=NOW()");
			$qry = "UPDATE requests SET datemodified=NOW(), importance='".$sdb->sqlenc($data["importance"])."'";
			if ($request["status"]=="closed" or $request["status"]=="complete") {
				$qry .= ", status='new', assignedto=''";
				$sdb->query("INSERT INTO comments SET requestid=".$request["id"].", authoruserid=20, author='System', comment='Automatically reopened by client action', datecreated=NOW()");
			}	
			$sdb->query($qry." WHERE id=".$request["id"]);
			$page->alert("The incident identified by the error tracking code you entered has been found and is shown below.  Your description has been added as a comment.", "done");

		} else {
			$sdb->query("INSERT INTO requests SET filename='".$db->sqlenc($uploadedfilenewname)."',client='".$project["client"]."', project='".$project["project"]."', authoruserid=".$authoruserid.", title='".$sdb->sqlenc($data["title"])."', description='".$sdb->sqlenc($data["description"])."', importance='".$sdb->sqlenc($data["importance"])."', status='new', datecreated=NOW(), datemodified=NOW(), supportpkg='".$sdb->sqlenc($project["supportpkg"])."'");
			$request = $sdb->queryRow("SELECT * FROM requests WHERE id=".$sdb->getInsertId());
			$page->alert("Your support request has been logged successfully and is shown below.  Engineers have been notified and will deal with your request as soon as possible.", "done");
		}

		if ($data["notifycontacts"]) {

			// Compile email and SMS alerts ready to send to people
			$page->set($request);
			$page->set("action", "created");
			$page->set("supporturl", $project["site"]);
			$page->set("comment", $data["description"]);
			$page->set("requestid", $request["id"]);
			$page->set("trackingfeed", urlencode(base64_encode("2:".$_SESSION["support"]["userid"].":".$request["id"])));
			$mailrecips = array("developer"=>array(), "general"=>array());
			$smsrecips = array();
			$levels = array('trivial'=>0,'minor'=>1,'normal'=>2,'major'=>3,'critical'=>4);
	
			// Contacts
			$sdb->query("SELECT u.email, u.mobile, u.smsnotifylevel, u.emailnotifylevel, p.isdeveloper FROM users u INNER JOIN permissions p ON u.id=p.userid WHERE (client IS NULL and project IS NULL) OR (client='".$project["client"]."' AND project is NULL) OR (client='".$project["client"]."' AND project='".$project["project"]."')");
			while ($user = $sdb->getRow()) {
				if ($levels[$user["emailnotifylevel"]] <= $levels[$data["importance"]] and $user["email"]) $mailrecips[($user["isdeveloper"]?"developer":"general")][$user["email"]] = true;
				if ($levels[$user["smsnotifylevel"]] <= $levels[$data["importance"]] and $user["mobile"]) $smsrecips[($user["isdeveloper"]?"developer":"general")][$user["mobile"]] = true;
			}
	
			// Send notifications by email
			foreach ($mailrecips as $emailtype => $addresses) {
				$recips = false;
				$msg = new Email();
				$msg->setSubject("New: ".str_replace("\r", "", substr($data["title"], 0, 80).((strlen($data["title"]) > 80)?"...":"")));
				$msg->setFrom("Assanka Support <noreply@assanka.net>");
				$msg->addRecipient("Support contact <noreply@assanka.net>");
				foreach ($addresses as $addr => $booleantrue) {
					if ($addr != $_SESSION["support"]["useremail"]) {
						$msg->addBCC($addr);
						$recips = true;
					}
				}
				if ($emailtype == "developer") $page->set("supporturl", "http://helpdesk.assanka.com/");
				else $page->set("supporturl", $project["site"]);
				$msg->setText($page->render("../html/email-comment"));
				if ($recips) $msg->send();
			}
	
			// Send notifications by text, using the correct URL.
			foreach ($smsrecips as $smstype => $numbers) {
				if ($smstype == "developer") $page->set("supporturl", "http://helpdesk.assanka.com/");
				else $page->set("supporturl", $project["site"]);
				$smstext = "NEW ".$page->render("../html/sms-comment");
				foreach ($numbers as $dest => $booleantrue) {
					if ($dest != $_SESSION["support"]["usermobile"]) {
						$sms = new SMS();
						$sms->setConcatMode();				
						$sms->addRecipient($dest);
						$sms->send($smstext);
					}
				}
			}
		}	
		
		$page->redirect("requests/view?id=".$request["id"]);

	} else {
		
		// Add an error message
		$page->alert("You did not complete the form correctly.  Please review the fields marked below, and ensure you have read the help text available in the panel on the right.", "error");
	}
} else {
	$data = array("importance"=>"normal", "notifycontacts"=>1, "requestauthor"=>$_SESSION["support"]["username"], "originalrequestauthor"=>$_SESSION["support"]["username"], "isdeveloper"=>!empty($_SESSION["support"]["isdeveloperonanyproject"]));
	if (sizeof(Model::$fields["projectcode"]["options"])==1) $data["projectcode"] = key(Model::$fields["projectcode"]["options"]);
	$group1->addData($data);
	
	// Add a default informational alert
	$page->alert("To create a new support request, fill in the form below and click the Save button on the right.");
}

// Output the form and help panel to the page
$page->add($form->getOutput());
$page->add("content", $page->render("../html/new-support-packages"));

$page->set("title", "Request Support");
$page->add("jsincludes", "lib/js/newrequest.js");
$page->outputHTML();
?>
