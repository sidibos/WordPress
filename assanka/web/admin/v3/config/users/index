<?php
/**
 * User management area of admin console; displays a list of all
 * users available to config, via the htaccess file, allowing
 * configuration of each user
 *
 * Upgraded to admin v3 on 7th April 2006 by RB.
 *
 * @copyright The Financial Times Limited [All Rights Reserved]
 */

require_once("userslib");

// Double-check .htpasswd file and cfg_adminusers database table exist
$htploc = $_SERVER["DOCUMENT_ROOT"].$_SERVER["PASSWD_PATH"];
if (!file_exists($htploc) || !$db->query("SELECT * FROM cfg_adminusers LIMIT 1", true)) {
	$page->addContent("content", "<strong>User management is disabled.</strong>");
	$page->title = "User management is disabled";
	$page->render();
	exit;
}

// Grab the list of users
$users = readHtpasswd();

// Build an array of names and usernames for everyone in cfg_adminusers
$names = array();
$res = $db->query("SELECT htaccessuser, name FROM cfg_adminusers");
while ($name = $db->fetchrow($res)) {
	$names[$name["htaccessuser"]] = $name["name"];
}

// Loop through each user, if there are any
if (count($users)) {
	foreach ($users as $username=>$passwd) {
		if (($username == "assanka") || empty($names[$username])) {
			unset($users[$username]);
		} else {
			$users[$username] = $names[$username];
		}
	}
}		

// Create a new data table
$tb = new datatable("configusers", "user");

// Define columns
$tb->addColumn("icon", "", "ASC", $tb->LEFTALIGN, 23);
$tb->addColumn("name", "Name", "ASC", $tb->LEFTALIGN, $tb->AUTOWIDTH, "edit?user=", $tb->NOFILTER);
$tb->addColumn("username", "User name", "ASC");

// Define filters
$tb->addFilter("namefilter", "Match name or username", "partialtext", 'n', false, "");

// Set default sort-by column
$tb->setSort("name");

// Sort the users array as appropriate...
if (count($users)) {
	if ($tb->sortdir == "ASC") $sortstring = "sort";
	else $sortstring = "rsort";
	if ($tb->sortby == "name") $sortstring = "a".$sortstring;
	else $sortstring = "k".$sortstring;
	$sortstring($users);
}

// Filter the table if needed
if ($namefilt = $tb->getFiltervalue("namefilter")) {
	foreach ($users as $username=>$name) {
		if ((strpos(strtolower($username), strtolower($namefilt)) === false) && (strpos(strtolower($name), strtolower($namefilt)) === false)) unset($users[$username]);
	}
}

// Grab a count of the numbers of users left before pagination, and page count
$numresults = count($users);
$numpages = ceil($numresults/$tb->rowsperpage);

// Define page number, default to page 1
$pno = (!empty($_GET["p"]) and is_numeric($_GET["p"])) ? $_GET["p"] : 1;

/*// Paginate the users list (!)
if (count($users) > $tb->rpp) {
	$users = array_slice($users, (($pno * $tb->rowsperpage) - $tb->rowsperpage), $tb->rowsperpage);
}*/

// Add results to table
if (count($users)) {
	foreach ($users as $username=>$name) {
		$row["icon"] = "<img src=\"".$_SERVER["CORE_WEB_ALIAS"]."/admin/v3/img/config/icon_user.png\" width=\"16\" height=\"16\" alt=\"user\" />";
		$row["name"] = $name;
		$row["username"] = $username;
		$hrefs = array("name"=>$row["username"]);
		$tb->addRow($row, $hrefs);
	}
}

// Create an action for new users
$page->addAction("submit", "Add new user", "edit?action=new");

// Construct the page
$page->addContent("content", $tb->outputTable());
$page->addContent("context", $db->outputPagination($numresults, $numpages, $pno, "user"));
$page->addContent("context", $tb->outputFilterform());

$page->title = "Admin User Management";
$page->render();
?>
