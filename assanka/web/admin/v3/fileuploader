<?php
/**
 * Uploads and stores a file in a temporary folder on a project webroot.
 *
 * @codingstandard ftlabs-phpcs
 * @copyright The Financial Times Limited [All Rights Reserved]
 */

require_once $_SERVER['CORE_PATH'] . '/helpers/http/v1/HTTPRequest';

header('Cache-Control: no-cache');
header('Pragma: no-cache');

$dir = (isset($_POST["path"]) and preg_match("/^\/[a-z0-9\/]*$/i", $_POST["path"])) ? $_POST["path"] : "/lib/tmp/uploadedfiles";
$dir = $_SERVER["DOCUMENT_ROOT"].$dir;


if (!recursiveMkdir($dir)) {
	outputUploadResult("uploadError", "Error #5: Unable to create directory");
	exit;
}
if (!is_dir($dir) or !is_writable($dir)) {
	outputUploadResult("uploadError", "Error #1: Unable to use directory");
	exit;
}

if (!empty($_FILES["newfile"]) and (empty($_FILES["newfile"]["error"]) or $_FILES["newfile"]["error"] != UPLOAD_ERR_NO_FILE)) {
	if (!empty($_FILES["newfile"]["error"]) and $_FILES["newfile"]["error"] == UPLOAD_ERR_INI_SIZE) {
		outputUploadResult("uploadError", "Error #6: The size of the uploaded file exceeds the limit set on this server.  Contact the server administrator for more details or to increase the limit");
	} elseif (!empty($_FILES["newfile"]["error"]) and $_FILES["newfile"]["error"] == UPLOAD_ERR_FORM_SIZE) {
		outputUploadResult("uploadError", "Error #7: The size of the uploaded file exceeds the limit set on this website.  Contact the server administrator for more details or to increase the limit");
	} elseif (!empty($_FILES["newfile"]["error"]) and $_FILES["newfile"]["error"] == UPLOAD_ERR_PARTIAL) {
		outputUploadResult("uploadError", "Error #8: The file was only partially received.  You may be able to upload the file successfully if you try again");
	} else {
		$newname = uniqueFilename($dir, $_FILES["newfile"]["name"]);
		if (@move_uploaded_file($_FILES['newfile']['tmp_name'], $dir."/".$newname)) {
			@chmod($dir."/".$newname, 0777);
			outputUploadResult("uploadComplete", $newname);
		} else {
			outputUploadResult("uploadError", "Error #2: Unable to move uploaded file");
		}
	}
} elseif (!empty($_POST["url"]) and preg_match("/^http\:\/\/(([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-z\-]+\.)+[a-z]{2,6})(\:[0-9]+)?/i", $_POST["url"])) {
	$request = new HTTPRequestV1($_POST['url']);
	$request->setTimeLimit(5);
	$request->setMaxRetries(1);
	try {
		$response = $request->send();
		if ($response->getResponseStatusCode() !== 200) {
			outputUploadResult('uploadError', 'Error #4: Unable to connect to ' . parse_url($_POST['url'], PHP_URL_HOST));
		} else {
			$data = $response->getBody();
			$fname = basename(parse_url($_POST['url'], PHP_URL_PATH));
			$newname = uniqueFilename($dir, $fname);
			$fp = fopen($dir."/".$newname, "w");
			fwrite($fp, $data);
			fclose($fp);
			outputUploadResult("uploadComplete", $newname);
		}
	} catch (HTTPRequestException $e) {
		outputUploadResult('uploadError', 'Error #4: Unable to connect to ' . parse_url($_POST['url'], PHP_URL_HOST));
	}
} else {
	outputUploadResult("uploadError", "Error #3: No files were received, and you did not provide a URL of a file on another website to use.");
}

if (isset($_POST["existingfile"]) and isset($newname) and $_POST["existingfile"] != $newname and file_exists($dir."/".$_POST["existingfile"])) {
	@unlink($dir."/".$_POST["existingfile"]);
}

exit;


function outputUploadResult($function, $message) {
	echo "<html><head><title>File Upload</title></head>";
	echo "<body><script type=\"text/javascript\">";
	echo "parent.FileUploader.".$function."('".addslashes($message)."');";
	echo "</script></body></html>";
}

function recursiveMkdir($path) {
	if (!file_exists($path)) {
		if (!dirname($path)) return false;
		recursiveMkdir(dirname($path));
		if (!is_writable(dirname($path))) return false;
		$old_umask = umask(0);
		mkdir($path, 0777);
		umask($old_umask);
	}
	return true;
}

function uniqueFilename($path, $name) {
	if (preg_match("/^(.*)(\([0-9]+\))?\.([^\.]+)$/Ui", $name, $matches)) {
		$newname = $matches[1].".".$matches[3];
		for ($i = 1; file_exists($path."/".$newname); $i++) {
			$newname = $matches[1]."(".$i.").".$matches[3];
		}
		return $newname;
	} else {
		$newname = $name;
		for ($i = 1; file_exists($path."/".$newname); $i++) {
			$newname = $name."(".$i.")";
		}
		return $newname;
	}
}
