<?php
/**
 * Proxy script for core components, 'require'd from project
 * loadcores to allow simplified updating.
 *
 * Accepted Inputs: (URL) path: string, path to load
 *
 * @copyright The Financial Times Limited [All Rights Reserved]
 */

require_once($_SERVER["DOCUMENT_ROOT"]."/lib/inc/global");



// This file is deprecated, and should no longer be in use.  This error designed to catch cases where it is still being used.
trigger_error('Deprecated code in use', E_USER_DEPRECATED);





$url = Common::geturlparams("");
if (strpos($url[0], "?") !== false) list($path, $query) = explode("?", $url[0]);
else $path = $url[0];

if(!defined("CORE_PATH")) define("CORE_PATH", "/assanka/");
$path = CORE_PATH.$path;
if (substr($path, strlen($path), 1) == "/") $path .= "index";

if ((strpos($path, "..") !== false) || (strpos($path, "%2E%2E") !== false)) {
	@header("HTTP/1.1 404 File Not Found");
	echo "File Not Found; Possible URL Error or Security Bypass Attempt";
	break;
}

if (is_file($path)) {
	
	// If file is an image, set a generous cache control header.  PHP, CSS and JS files can handle their own cache control if they need to
	if (preg_match("/^.*\.(png|gif|jpg|jpeg)$/i", $path)) {
		header("Expires: " . date("r", time()+31536000));
		header("Last-Modified: " . date("r", time()-31536000));
		header("Cache-Control: max-age=31536000");
		header("Pragma: cache");
		if (preg_match("/^.*\.(jpg|jpeg)$/i", $path)) {
			header("Content-Type: image/jpeg");
		} else if (preg_match("/^.*\.(gif)$/i", $path)) {
			header("Content-Type: image/gif");
		} else if (preg_match("/^.*\.(png)$/i", $path)) {
			header("Content-Type: image/png");
		}
		header("Content-Length: ".(string)(filesize($path)));
		readfile($path);
	} else if (preg_match("/^.*\.(css)$/i", $path)) {
		header("Expires: " . date("r", time()+31536000));
		header("Last-Modified: " . date("r", time()-31536000));
		header("Cache-Control: max-age=31536000");
		header("Content-Type: text/css");
		readfile($path);
	} else if (preg_match("/^.*\.(xml)$/i", $path)) {
		header("Content-Type: text/xml");
		readfile($path);
	} else if (preg_match("/^.*\.(htc)$/i", $path)) {
		header("Content-Type: text/x-component");
		readfile($path);
	} else if (preg_match("/^.*\.(js)$/i", $path)) {
		header("Content-Type: text/javascript");
		readfile($path);
	} else if (preg_match("/^.*\.(cgi)$/i", $path)) {
		$queryString = $QUERY_STRING;
		while (list ($header, $value) = each($_POST)) {
			$queryString = $queryString."&".$header."=".$value;
		}
		virtual($path."?".$queryString);
	} else {
		include($path);
	}
} else if (is_file($path."/index")) {
	include($path."/index");
} else {
	@header("HTTP/1.1 404 File Not Found");
	echo "Not Found";
}

?>