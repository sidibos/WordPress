<?php
/*
########################################################
Assanka Template Manager, version 3
-------------
Produces HTML output based on matching an array of
content items with tags in template files.

Accepted Inputs:
none

4th March 2004
Andrew Betts
Assanka Ltd
########################################################
*/



// This file is deprecated, and should no longer be in use.  This error designed to catch cases where it is still being used.
trigger_error('Deprecated code in use', E_USER_DEPRECATED);






function template($tem, $content = "") {

	// Define the location of the template
	$temurl = $_SERVER["DOCUMENT_ROOT"].DIR_TEMPL."/".$tem.".html";

	// Check that the specified template exists
	if (!file_exists($temurl)) {
		
		// If not, try the master templates
		if (DIR_MASTERTEMPL) $temurl = DIR_MASTERTEMPL."/".$tem.".html";
		if (!file_exists($temurl)) {
			trigger_error("Template '".$tem."' not found", E_USER_ERROR);
		}
	}

	// Open and read the template file
	$fp = fopen($temurl, "r") or trigger_error("Failure opening template '".$tem."'", E_USER_ERROR);
	$buffer = "";
	while (!feof($fp)) {
		$buffer .= fread($fp, 4096);
	}

	// Add a leading space to prevent anything being found at index 0
	$buffer = " ".$buffer;

	// Create placeholder arrays
	$placeholders = array();
	$functions = array();
	$phindex = 0;

	// Read VALIDPLACEHOLDER and VALIDFUNCTION tags
	while ($pos = strpos($buffer, "<!--@VALID")) {

		// extract the relevant bit
		$colonpos = strpos($buffer, ":", $pos);
		$end = strpos($buffer, "-->", $pos);
		$placeholder = explode(", ", trim(substr($buffer, $colonpos+1, ($end - $colonpos)-1)));
		if (preg_match("/^[a-z0-9_A-Z]+$/", $placeholder[0])) {
			if (strpos($buffer, "<!--@VALIDPLACEHOLDER", $pos) == $pos) {
				$placeholders[$phindex]["tag"] = trim($placeholder[0]);
				$placeholders[$phindex]["default"] = trim($placeholder[1]);
				$phindex++;
			} else {
				$functions[] = trim($placeholder[0]);
			}
		} else {
			trigger_error("Invalid placeholder or function specified in template header (template: '$tem', placeholder: '$placeholder[0]').  The placeholder was ignored", E_USER_WARNING);
		}
		$buffer = substr($buffer, 0, $pos).substr($buffer, ($end+3));
	}

	// If there is content...
	if ($content) {

		// Loop through the possible placeholder tags
		foreach($placeholders as $placeholder) {
			if ($content[$placeholder["tag"]]) {

				// Substitute in the data
				$buffer = str_replace("<!--@".$placeholder["tag"]."-->", $content[$placeholder["tag"]], $buffer);
			} elseif (defined(strtoupper($placeholder["tag"]))) {

				// Substitute in the data from a constant
				$buffer = str_replace("<!--@".$placeholder["tag"]."-->", constant($placeholder["tag"]), $buffer);
			} else {

				// Substitute in the default value
				$buffer = str_replace("<!--@".$placeholder["tag"]."-->", $placeholder["default"], $buffer);
			}
		}
	}

	// Loop through the possible code tags
	foreach ($functions as $tag) {
		if (function_exists("tem_".$tag)) {

			// Search first to avoid endlessly recursing
			if (strpos($buffer, "<!--@$tag-->") !== false) {
				eval("\$ret = tem_".$tag."();");
				$buffer = str_replace("<!--@$tag-->", $ret, $buffer);
			}
		} else {
			trigger_error("Function 'tem_$tag()' not found in template '$tem'", E_USER_WARNING);
		}
	}

	// Remove any remaining placeholders and the headers
	$buffer = preg_replace("/\<\!\-\-\@[a-z0-9A-Z ':,()_\.\-]+\-\-\>/", "", $buffer);

	// Be evil and remove all newlines
	//$buffer = str_replace("\n", "", $buffer);

	// Run result through tidy
	$config = array('indent' => TRUE,
		'doctype' => 'omit',
		'wrap', 200);
	//$buffer = tidy_parse_string($buffer, $config, 'UTF8');

	// return the final output
	return trim($buffer)."\n";
}

function tem_nav() {
	$op = "";
	
    // Test if there's a "visible" field in the DB, and use it if there is:
    $result = doquery("SELECT * FROM content LIMIT 0,1");
    if ($row=fetcharray($result)) { 
        if(array_key_exists("visible",$row)) {
            $visibletest = " AND visible=1 ";
        } else {
            $visibletest = "";
        }
    }

	// CMS navigation items
	$result = doquery("SELECT id, tag, title FROM content WHERE (parentid IS NULL OR parentid<=0) $visibletest ORDER BY sortindex, title");
	while ($row = fetcharray($result)) {
		$sel = (strpos($_SERVER["PHP_SELF"], "/content/".$row["tag"]) !== false)?"sel":"unsel";

		// Sub navigation?
		if ($sel == "sel") {
			$result2 = doquery("SELECT id, tag, title FROM content WHERE parentid=".$row["id"]." $visibletest ORDER BY sortindex, title");
			if (mysql_num_rows($result2)) {
				$subnav = "";
				while ($subrow = fetcharray($result2)) {
					$subsel = ($_SERVER["PHP_SELF"] == "/content/".$subrow["tag"]."/")?"sel":"unsel";
					$subnav .= template("page-navitem", array("location"=>"/content/".$subrow["tag"]."/", "id"=>"cms".$subrow["id"].$subsel, "selstate"=>$subsel, "title"=>$subrow["title"], "text"=>$subrow["title"]));
				}
				$subnav = template("page-navitem-subnav", array("items"=>$subnav));
			} else {
				$subnav = "";
			}
		} else {
			$subnav = "";
		}
		$op .= template("page-navitem", array("location"=>"/content/".$row["tag"]."/", "id"=>"cms".$row["id"].$sel, "selstate"=>$sel, "title"=>$row["title"], "text"=>$row["title"], "subnav"=>$subnav));
		
	}
	return $op;
}

function tem_year() {
	return date("Y");
}

function tem_feature() {
	$result = doquery("SELECT id, eventname as name, description, picalt, DATE_FORMAT(start, '%W %D %M') as date FROM events WHERE issitefeature=1");
	if (mysql_num_rows($result)) {
		$rec = fetcharray($result);
		$rec["picurl"] = "/lib/tmp/eventfiles/".$rec["id"].".jpg";
		$rec["url"] = "/whatson/event/".$rec["id"]."/";
		return template("page-footer[feature]-content", $rec);
	} else {
		$result = doquery("SELECT id, name, description, picalt FROM venues WHERE issitefeature=1");
		if (mysql_num_rows($result)) {
			$rec = fetcharray($result);
			$rec["picurl"] = "/lib/tmp/venuefiles/".$rec["id"].".jpg";
			$rec["url"] = "/wheretogo/venue/".$rec["id"]."/";
			return template("page-footer[feature]-content", $rec);
		}
	}
}
?>
