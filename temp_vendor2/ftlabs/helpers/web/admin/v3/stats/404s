<?php
/*
########################################################
Stats page for Popular pages

Upgraded to core v3 on 19th April 2006 by RB.

04/11/2004
Andrew Betts
Assanka Ltd
########################################################
*/

require_once("statslib");
if (!checkIfAuth("statistics", "", false, array("sbe", "premium", "server"))) {
	outputPremiumGuideAndExit(&$page);
}

// Define 404s to exclude from the display - any 404s no admin would wish to
// see, such as common exploit/virus attempts and metadata files
$errorstoexclude = array("/robots.txt", "/scripts/formmail.pl", "/scripts/root.exe", "/c/winnt/system32/cmd.exe", "/scripts/..%252f../winnt/system32/cmd.exe", "/default.ida", "/scripts/nsiislog.dll", "/xmlrpc.php", "/phpmyadmin/index.php", "/drupal/xmlrpc.php", "/cgi-bin/awstats.pl", "/phpgroupware/xmlrpc.php", "/blog/xmlrpc.php", "/blogs/xmlsrv/xmlrpc.php", "/phpmyadmin/main.php", "/blog/xmlsrv/xmlrpc.php", "/awstats/awstats.pl", "/xmlsrv/xmlrpc.php", "/xmlrpc/xmlrpc.php", "/cgi-bin/awstats/awstats.pl", "/PMA/main.php", "/_vti_inf.html", "/mysql/main.php", "/_vti_bin/shtml.exe/_vti_rpc", "/mysql-admin/main.php", "/db/main.php", "/dbadmin/main.php", "/web/phpMyAdmin/main.php", "/phpmyadmin2/main.php", "/mysqladmin/main.php");

// Create a new data table
$tb = new datatable("404s", "visit");

// Define columns
$tb->addColumn("page", "Page", "ASC");
$tb->addColumn("hits", "Hits", "DESC", $tb->RIGHTALIGN);
$tb->addColumn("referrer", "Referrer", "ASC");

// Define filters
$tb->addFilter("startdate", "Start month (mm/yyyy)", "partialtext", "s", false, date('m/Y'));
$tb->addFilter("enddate", "End month (mm/yyyy)", "partialtext", "e", false, date('m/Y'));

// Set default sort-by column
$tb->setSort("hits");

// Process the date filter
$startdate = Common::convertHumanTime($tb->getFilterValue("startdate"));
$enddate = Common::convertHumanTime($tb->getFilterValue("enddate"));
checkDateFilters(&$startdate, &$enddate, &$page);

$counts = get404Pages(date("mY", $startdate), date("mY", $enddate));

// Remove any pages in the filter array
foreach ($counts as $key=>$data) {
	if (in_array($key, $errorstoexclude)) unset($counts[$key]);
}

// Grab a count of the numbers of pages left before pagination, and page count
$numresults = count($counts);
$numpages = ceil($numresults/$tb->rowsperpage);

// Deal with sorting the data...
sortArrayBasedTable(&$counts, &$tb);

// Define page number, default to page 1
$pno = (is_numeric($_GET["p"])) ? $_GET["p"] : 1;

// Paginate the pages list (!)
if (count($counts) > $tb->rpp) {
	$counts = array_slice($counts, (($pno * $tb->rowsperpage) - $tb->rowsperpage), $tb->rowsperpage);
}

foreach ($counts as $data) {
	$data["page"] = str_replace("/", "/&shy;<wbr />", $data["page"]);
	$data["hits"] = number_format($data["hits"]);
	if ($data["referrer"] && ($data["referrer"] != "-")) $data["referrer"] = "<a href=\"".$data["referrer"]."\">".str_replace("/", "/&shy;<wbr />", $data["referrer"])."</a>";
	$tb->addRow($data, false);
}

// Construct the page
$page->addContent("content", $tb->outputTable());
$page->addContent("context", $db->outputPagination($numresults, $numpages, $pno, "404 error"));
$page->addContent("context", $tb->outputFilterform());
$page->addContent("context", getStatsDateString($startdate, $enddate));
$page->addContent("context", file_get_contents("/assanka/web/admin/v3/stats/html/404sinfo"));

$page->render();
?>