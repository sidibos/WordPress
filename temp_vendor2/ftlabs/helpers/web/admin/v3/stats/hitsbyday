<?php
/*
########################################################
Stats page for Hits by Day

Upgraded to core v3 on 13th April 2006 by RB.

04/11/2004
Andrew Betts
Assanka Ltd
########################################################
*/

require_once("statslib");
if (!checkIfAuth("statistics", "", false, array("standard", "sbe", "premium", "server"))) {
	outputPremiumGuideAndExit(&$page);
}

// Set up the graph types
$graphs = array("visits"=>"Visits", "pages"=>"Pages", "hits"=>"Hits", "bandwidth"=>"Bandwidth");

// Set up the resolutions available, and associated date formats
$resolutions = array("months"=>"12 months by month", "weeks"=>"6 months by week", "days"=>"One month by days");
$dateformats = array("months"=>"M Y", "weeks"=>"\w\e\e\k W, Y", "days"=>"d M Y");

// Create a new data table
$tb = new datatable("hitsbyday", "visit");

// Define columns
$tb->addColumn("date", "Date", "ASC");
$tb->addColumn("hits", "Hits", "DESC", $tb->RIGHTALIGN);
$tb->addColumn("pages", "Pages", "DESC", $tb->RIGHTALIGN);
$tb->addColumn("visits", "Vistors", "DESC", $tb->RIGHTALIGN);
$tb->addColumn("bandwidth", "Data", "DESC", $tb->RIGHTALIGN);

// Define filters
$tb->addFilter("graph", "Show", "select", 's', $graphs, "visits", false);
$tb->addFilter("resolution", "Resolutions", "select", 'r', $resolutions, "months", false);
$tb->addFilter("enddate", "To month (mm/yyyy)", "partialtext", "t", false, date('m/Y'));

// Set default sort-by column
$tb->setSort("date");

// Process the date filter
$enddate = Common::convertHumanTime($tb->getFilterValue("enddate"));
checkDateFilters(&$enddate, &$enddate, &$page, true);

$counts = processDayStats($enddate, $tb->getFilterValue("resolution"));

// Deal with sorting the data...
sortArrayBasedTable(&$counts, &$tb);

foreach ($counts as $data) {
	$data["date"] = date($dateformats[$tb->getFilterValue("resolution")], $data["date"]);
	$data["hits"] = number_format($data["hits"]);
	$data["pages"] = number_format($data["pages"]);
	$data["visits"] = number_format($data["visits"]);
	$data["bandwidth"] = Common::dispBytes($data["bandwidth"]);
	$tb->addRow($data, false);
}

// Build up the image string...
$graphString = "<img src=\"".$_SERVER["CORE_WEB_ALIAS"]."/admin/v3/stats/graphs/hitsbyday"."?show=".$tb->getFilterValue("graph")."&res=".$tb->getFilterValue("resolution")."&end=".$enddate.".\" style=\"width: 650px; height: 350px; margin-top: 10px;\" />";

// Work out the start date based on the end date and resolution
switch ($tb->getFilterValue("resolution")) {
	case "months":
		$startdate = strtotime("-12 months", $enddate) + 1;
		break;
	case "weeks":
		$startdate = strtotime("-6 months", $enddate) + 1;
		break;
	default:
		$startdate = strtotime("-1 month", $enddate) + 1;
		break;
}

// Construct the page
$page->addContent("content", "<div class=\"graphcont\">".$graphString."</div>");
$page->addContent("content", $tb->outputTable());
$page->addContent("context", $tb->outputFilterform());
$page->addContent("context", getStatsDateString($startdate, $enddate));
$page->addContent("context", file_get_contents("/assanka/web/admin/v3/stats/html/hitsbydayinfo"));

$page->render();
?>