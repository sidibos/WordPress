<?php
/*
########################################################
Stats page for Popular pages

Upgraded to core v3 on 18th April 2006 by RB.

04/11/2004
Andrew Betts
Assanka Ltd
########################################################
*/

require_once("statslib");
if (!checkIfAuth("statistics", "", false, array("sbe", "premium", "server"))) {
	outputPremiumGuideAndExit(&$page);
}

$page->waitmsg("compilingresults");

// Create a new data table
$tb = new datatable("popularpages", "visit");

// Define columns
$tb->addColumn("page", "Page", "ASC");
$tb->addColumn("hits", "Hits", "DESC", $tb->RIGHTALIGN);
$tb->addColumn("bandwidth", "Data transferred", "DESC", $tb->RIGHTALIGN);
$tb->addColumn("entry", "Entries", "DESC", $tb->RIGHTALIGN);
$tb->addColumn("exit", "Exits", "DESC", $tb->RIGHTALIGN);

// Define filters
$tb->addFilter("startdate", "Start month (mm/yyyy)", "partialtext", "s", false, date('m/Y'));
$tb->addFilter("enddate", "End month (mm/yyyy)", "partialtext", "e", false, date('m/Y'));
$tb->addFilter("urlfilter", "Match page URL", "partialtext", 'u', false, "");

// Set default sort-by column
$tb->setSort("hits");

// Process the date filter
$startdate = Common::convertHumanTime($tb->getFilterValue("startdate"));
$enddate = Common::convertHumanTime($tb->getFilterValue("enddate"));
checkDateFilters(&$startdate, &$enddate, &$page);

$counts = getPages(date("mY", $startdate), date("mY", $enddate));

// Remove admin and lib files, and filter the table if needed
$counts = removePrivateAndLibData($counts);

$urlfilt = $tb->getFiltervalue("urlfilter");
foreach ($counts as $key=>$data) {
	if ($urlfilt and (strpos(strtolower($data["page"]), strtolower($urlfilt)) === false)) unset($counts[$key]);
}

// Grab a count of the numbers of pages left before pagination, and page count
$numresults = count($counts);
$numpages = ceil($numresults/$tb->rowsperpage);

// Deal with sorting the data...
sortArrayBasedTable(&$counts, &$tb);

// Define page number, default to page 1
$pno = (is_numeric($_GET["p"])) ? $_GET["p"] : 1;

// Paginate the pages list (!)
if (count($counts) > $tb->rpp) {
	$counts = array_slice($counts, (($pno * $tb->rowsperpage) - $tb->rowsperpage), $tb->rowsperpage);
}

foreach ($counts as $data) {
	$data["page"] = str_replace("/", "/&shy;<wbr />", $data["page"]);
	$data["hits"] = number_format($data["hits"]);
	$data["bandwidth"] = Common::dispBytes($data["bandwidth"]);
	$data["entry"] = number_format($data["entry"]);
	$data["exit"] = number_format($data["exit"]);
	$tb->addRow($data, false);
}

// Construct the page
$page->addContent("content", $tb->outputTable());
$page->addContent("context", $db->outputPagination($numresults, $numpages, $pno, "popular page"));
$page->addContent("context", $tb->outputFilterform());
$page->addContent("context", getStatsDateString($startdate, $enddate));
$page->addContent("context", file_get_contents("/assanka/web/admin/v3/stats/html/popularpagesinfo"));

$page->render();
?>