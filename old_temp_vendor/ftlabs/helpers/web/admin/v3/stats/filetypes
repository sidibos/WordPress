<?php
/*
########################################################
Stats page for File Types

Upgraded to core v3 on 19th April 2006 by RB.

04/11/2004
Andrew Betts
Assanka Ltd
########################################################
*/

require_once("statslib");
if (!checkIfAuth("statistics", "", false, array("sbe", "premium", "server"))) {
	outputPremiumGuideAndExit(&$page);
}

// Create a new data table
$tb = new datatable("filetypes", "file type");

// Define columns
$tb->addColumn("icon", "", "ASC", false, 18);
$tb->addColumn("type", "File type", "ASC");
$tb->addColumn("extension", "Extension", "ASC");
$tb->addColumn("hits", "Hits", "DESC");
$tb->addColumn("bandwidth", "Bandwidth", "DESC");

// Define filters
$tb->addFilter("startdate", "Start month (mm/yyyy)", "partialtext", "s", false, date('m/Y'));
$tb->addFilter("enddate", "End month (mm/yyyy)", "partialtext", "e", false, date('m/Y'));

// Set default sort-by column
$tb->setSort("hits");

// Process the date filter
$startdate = Common::convertHumanTime($tb->getFilterValue("startdate"));
$enddate = Common::convertHumanTime($tb->getFilterValue("enddate"));
checkDateFilters(&$startdate, &$enddate, &$page);

// Get the actual filetype datra
$counts = getFileTypes(date("mY", $startdate), date("mY", $enddate));

// Set up a filetypes array
$typedescr = array(
	"doc" => "Microsoft Word Document",
	"xls" => "Microsoft Excel Workbook",
	"ppt" => "Microsoft Powerpoint Presentation",
	"ico" => "Icon",
	"bmp" => "Bitmap Image",
	"gif" => "GIF Image",
	"jpg" => "JPEG Image",
	"jpeg" => "JPEG Image",
	"png" => "PNG Image",
	"tif" => "TIFF Image",
	"tiff" => "TIFF Image",
	"swf" => "Shockwave Flash Movie",
	"shtml" => "Web page (HTML)",
	"html" => "Web page (HTML)",
	"shtm" => "Web page (HTML)",
	"htm" => "Web page (HTML)",
	"php" => "Web script (PHP)",
	"pl" => "Web script (Perl)",
	"pdf" => "Adobe PDF Document",
	"css" => "Style Sheet",
	"js" => "Javascript Source file",
	"mp3" => "MPEG Layer 3 Audio (MP3)",
	"rm" => "RealMedia Audio",
	"txt" => "Plain text file",
	"dwt" => "Dreamweaver template",
	"xml" => "XML structured data, used in interactive pages or feeds",
	"Unknown" => "No extension, probably web page or web script");

// Deal with additional columns pre-sorting
foreach ($counts as $key=>$data) {
	if ($typedescr[$data["extension"]]) $counts[$key]["type"] = $typedescr[$data["extension"]];
	else $counts[$key]["type"] = "<em>.".$data["extension"]."</em>";
}

// Deal with sorting the data...
sortArrayBasedTable(&$counts, &$tb);

foreach ($counts as $data) {
	if (file_exists("/assanka/web/imgs/filetype16/".$data["extension"].".png")) {
		$data["icon"] = "<img src=\"".$_SERVER["CORE_WEB_ALIAS"]."/imgs/filetype16/".$data["extension"].".png\" alt=\"".$data["extension"]."\" />";
	} else {
		$data["icon"] = "<img src=\"".$_SERVER["CORE_WEB_ALIAS"]."/imgs/filetype16/default.png\" alt=\"".$data["extension"]."\" />";
	}
	$data["hits"] = number_format($data["hits"]);
	$data["bandwidth"] = Common::dispBytes($data["bandwidth"]);
	$tb->addRow($data);
}

// Build up the image string...
$graphString = "<img src=\"".$_SERVER["CORE_WEB_ALIAS"]."/admin/v3/stats/graphs/filetypes?start=".$startdate."&end=".$enddate.".\" style=\"width: 650px; height: 350px; margin-top: 10px;\" />";

// Construct the page
$page->addContent("content", "<div class=\"graphcont\">".$graphString."</div>");
$page->addContent("content", $tb->outputTable());
$page->addContent("context", $tb->outputFilterform());
$page->addContent("context", getStatsDateString($startdate, $enddate));
$page->addContent("context", file_get_contents("/assanka/web/admin/v3/stats/html/filetypesinfo"));

$page->render();
?>