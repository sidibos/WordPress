<?php
/**
 * Presents a list of the pages whose parent page has the specified
 * id, and allows user to enter new sort indexes for them
 *
 * Accepted Inputs: (GET) id: pageid of page to use as parent of the
 * pages to be sorted
 *
 * @copyright The Financial Times Limited [All Rights Reserved]
 */

require_once($_SERVER["DOCUMENT_ROOT"]."/lib/inc/global");
require_once("cmslib");

// Homepages get sent as blank ids...
if (empty($_REQUEST["id"])) $_REQUEST["id"] = "0";

if (!isset($_REQUEST["id"]) or !is_numeric($_REQUEST["id"])) {
	$page->alert("You tried to sort pages within a folder, but no id was supplied, or the id was not numeric.  The ID should always be filled in automatically if you followed a link from another page; if you believe you are seeing this in error, please contact support.", "error");
	header("Location: index");
	exit;
}

$rec = $db->queryRow("SELECT itemid, siteid, tag, languageisocode FROM out_localcontent l LEFT JOIN out_items i ON l.itemid=i.id WHERE l.id=".$_REQUEST["id"]);
if (!$rec and $_REQUEST["id"] !== "0") trigger_error("Page not found!", E_USER_ERROR);
if (!$rec and $_REQUEST["id"] === "0") $rec = array("itemid"=>"0", "siteid"=>$_SESSION["outlinesiteid"],  "tag"=>"homepage", "languageisocode"=>"en"); // TODO isocode

// Check whether user has rights to sort this folder
cmsCheckIfAuth("sortpage", $rec["tag"], "", true, $rec["siteid"]);

// Save the location of this folder for redisplay of index
saveLastSelectedPage($rec["tag"]."/*");

// Select the pages to be sorted
$pageresult = $db->query("SELECT i.id as itemid, sortindex, title, v.id AS versionid FROM out_items i LEFT JOIN out_localcontent l ON i.id = l.itemid LEFT JOIN out_versions v ON l.id = v.localcontentid WHERE ".(($rec["tag"] == "homepage")?"(parentid IS NULL OR parentid=0 OR parentid=".$rec["itemid"].")":"parentid=".$rec["itemid"])." AND tag!='homepage' AND (islive=1 OR draftuser IS NOT NULL) AND languageisocode='".$rec["languageisocode"]."' AND siteid='".$rec["siteid"]."' ORDER BY sortindex, title, islive DESC");

// Use a different query if appropriate
$extendarray = array(&$rec,&$pageresult);
extendCMS("sortFoundSubpages",$extendarray);

// Error if no subpages were found
if (!$db->numresults($pageresult)) {
	$page->alert("The page you attempted to sort has no subpages.  To sort pages within a folder, select the folder and then choose Sort.", "error");
	header("Location: index");
	exit;
}

// Add the form fields for each page to the group
$form = new inputform("sortpages", "POST", "sort");
$group1 = new simplefieldgroup(&$form);
$oldsortorder = array();
while ($eachpage = $db->fetchrow($pageresult)) {
	if (isset($oldsortorder["page".$eachpage["itemid"]])) continue; // Discard drafts of live pages
	$group1->addText("page".$eachpage["itemid"], $eachpage["title"], false, true, "/^[0-9]+$/", 2);
	$form->addHelptext("page".$eachpage["itemid"], "Enter the sort index for '".$eachpage["title"]."'.  The page will be displayed before any pages with a higher number, and after any pages with a lower number.  Any pages with the same sort index will be sorted alphabetically.<br /><br />Enter the sort index as a simple number between 0 and 99.");
	$oldsortorder["page".$eachpage["itemid"]] = $eachpage["sortindex"];
}

$group1->addHidden("id", $_REQUEST["id"]);

// Add action buttons
$page->addAction("submit", "Save", false, "document.frmsortpages.submit()");
$page->addAction("submit", "Cancel", "index", false);

// Check for submitted information, and check any using the core validation
if ($_POST) {
	$group1->addData($_POST);
	if ($group1->inputValid()) {
		mysql_data_seek($pageresult, 0);
		while ($eachpage = $db->fetchrow($pageresult)) {

			// Outline extension - so something special instead of saving this page
			$extendarray = array(&$_POST,&$eachpage);
			$result = extendCMS("sortSavePageStart",$extendarray);
			if (is_bool($result) and $result) continue;
			
			// Prevent submission of data not via the field groups, thus bypassing validation
			if (!isset($oldsortorder["page".$eachpage["itemid"]])) continue;
			
			$db->query("UPDATE out_items SET sortindex=".$_POST["page".$eachpage["itemid"]]." WHERE ".(($rec["tag"] == "homepage")?"(parentid IS NULL OR parentid=0 OR parentid=".$rec["itemid"].")":"parentid=".$rec["itemid"])." AND id=".$eachpage["itemid"]);
			$db->query("INSERT INTO out_actionlog SET versionid=".$eachpage["versionid"].", user='".(($_SERVER["PHP_AUTH_USER"])?$_SERVER["PHP_AUTH_USER"]:$_SERVER["REMOTE_USER"])."', actiontype='sort', comment='Value set to ".$_POST["page".$eachpage["itemid"]]."', date=NOW()");
			
		}

		// Outline extension: perform an action following a sort
		$extendArray = array(&$_REQUEST["id"], &$_POST);
		extendCMS("sortComplete", $extendArray);
			
		// Flush the site cache, as sorting will have affected navigation areas
		outlineDeleteCache($rec["siteid"]);
		
		$page->alert("New sort order saved.", "done");
		header("Location: index");
		exit;
	} else {	
		$group1->addToForm(true);
		
		// Add an error message
		$page->alert("You did not complete the form correctly.  Please review the fields marked below, and ensure you have read the help text available in the panel on the right.", "error");
	}
} else {

	// Add some default data
	$group1->addData($oldsortorder);
	
	// Add a default informational alert
	$page->alert("Enter numbers next to the pages to indicate the order in which you would like them to be displayed.  If two or more pages share the same number, they will be sorted alphabetically.");
	
	// Add the fieldgroups to the form
	$group1->addToform(false);
}

$page->addContent("content", $form->outputForm());
$page->addContent("context", $form->outputContextHelp());
$page->render();
?>