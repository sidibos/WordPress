<?php
/**
 * CMS delivery script functions, to be included by a content script
 * within each project. Intended to output content, formatted by
 * means of templates, using tags passed on querystring as
 * parameters.
 *
 * Accepted Inputs: none
 *
 * @copyright The Financial Times Limited [All Rights Reserved]
 */

function returnPageHTML($tag, $lastModDateString = false, $lastModDateFormat = false, $extraTemplateTerms = false, $templateToUse = "page-cms", $includeSiteTitle = true, $siteID = 1, $pageTemplateToUse = "page", $enablecache = true) {

	global $db, $page;
	
	// Check the tag for a query string and remove if present...
	if (strpos($tag, "?") !== false) $tag = substr($tag, 0, strpos($tag, "?")-1);
	$tag = trim($tag, "/");
	if ($tag == "") $tag = "homepage";
	
	// Set up page caching - set up the langauge **todo**
	$CMSIsoCode = "en";
	$pageHTML = false;

	$cacheRoot = $_SERVER["DOCUMENT_ROOT"]."/lib/tmp/cmscache/";
	$cacheSiteRoot = $cacheRoot.$siteID."/";
	$cacheLocRoot = $cacheSiteRoot.$CMSIsoCode."/";

	// Determine whether or not to use a file cache
	$cacheexists = false;
	$cachefilelocation = $cacheLocRoot.$tag."/index.html";
	if (file_exists($cachefilelocation)) {
				
		// Check whether the file has been modified within the last hour
		if (@filemtime($cachefilelocation) > (time() - 3600)) {
			$cacheexists = true;
		
		// If it hasn't been, delete the cache.
		} else {
			@unlink($cachefilelocation);
		}
	}

	// Four possible code paths; user-no-cache, user-cache, admin-no-cache, admin-cache
	if ($enablecache and file_exists($cacheLocRoot.$tag."/index.html")) {
		if (isset($_SESSION['outlineadmin']) && $_SESSION["outlineadmin"]) {
			$pageHTML = file_get_contents($cacheLocRoot.$tag."/index.html");
			
			// Also grab the content id for use in strings
			require_once($_SERVER["DOCUMENT_ROOT"]."/lib/inc/global");
			$result = $db->query("SELECT out_localcontent.id FROM out_localcontent LEFT JOIN out_items ON out_localcontent.itemid=out_items.id LEFT JOIN out_versions ON out_localcontent.id=out_versions.localcontentid WHERE tag='".$db->sqlenc($tag)."' AND visibility IS NOT NULL AND visibility != 'inaccessible' AND islive = 1 AND siteid=".$siteID);
			if (mysql_num_rows($result)) $content = $db->fetchrow($result);
		} else {
			return file_get_contents($cacheLocRoot.$tag."/index.html");
		}
	
	// If no cache exists, we need to grab the page from the database,
	// and also generate a static page.
	} else {
		require_once($_SERVER["DOCUMENT_ROOT"]."/lib/inc/global");
		require_once("cmslib");
		$result = $db->query("SELECT out_localcontent.id, tag, title, html AS content, DATE_FORMAT(datecreated, '".(($lastModDateFormat)?$lastModDateFormat:"%W, %d-%b-%y %H:%i:%T")."') as lastmod, DATE_FORMAT(datecreated, '%W, %d-%b-%y %H:%i:%T') as metamoddate FROM out_items LEFT JOIN out_localcontent ON out_items.id=out_localcontent.itemid LEFT JOIN out_versions ON out_localcontent.id=out_versions.localcontentid WHERE tag='".$db->sqlenc($tag)."' AND visibility != 'inaccessible' AND visibility IS NOT NULL AND islive = 1 AND siteid=".$siteID);
		if (mysql_num_rows($result)) {
			$content = $db->fetchrow($result);
			$extendArray = array(&$content);
			extendCMS("modifyContentRow", $extendArray);
			if ($content["lastmod"] && $lastModDateString) $content["lastmod"] = str_replace("-dateGetsInsertedHere-", $content["lastmod"], $lastModDateString);
			$content["maincontent"] = template($templateToUse, $content);
			$content["pagetitle"] = (($includeSiteTitle)?SITENAME:"")." (".$content["title"].")";
			if (is_array($extraTemplateTerms)) {
				foreach ($extraTemplateTerms as $key => $template) {
					if (is_array($template)) {
						if ($template["content"]) $content[$key] = $template["content"];
						else $content[$key] = $template["template"];
					} else {
						$content[$key] = template($template, $content);
					}
				}
			}
		
			// Output page template to a string
			$pageHTML = template($pageTemplateToUse, $content);
		} else {
			include($_SERVER["DOCUMENT_ROOT"]."/lib/err/404");
			exit;
		}
	
		if ($enablecache) {
			
			// Create the folder path for the cache, if it doesn't exist
			$old_umask = umask(0);
			if (!file_exists($cacheRoot)) mkdir($cacheRoot, 0777);
			if (!file_exists($cacheSiteRoot)) mkdir($cacheSiteRoot, 0777);
			if (!file_exists($cacheLocRoot)) mkdir($cacheLocRoot, 0777);
			$tagparts = explode("/", $tag);
			for ($i=0; $i<count($tagparts); $i++) {
				$folders = "";
				for ($j=0; $j<=$i; $j++) {
					$folders .= "/".$tagparts[$j];
				}
				if (!file_exists($cacheLocRoot.$folders)) @mkdir($cacheLocRoot.$folders, 0777);
			}
			
			// Create the cached page
			if ($cache = @fopen($cacheLocRoot.$tag."/index.html", "w")) {
				fwrite($cache, $pageHTML);
				fclose($cache);
			}
			chmod($cacheLocRoot.$tag."/index.html", 0777);
			umask($old_umask);
		}
		
		// What to do next depends on whether the visitor is a user or
		// a logged-in admin.  Admins need the page modifying, but if the
		// visitor is a user now, output the page at once so caching happens
		// after the fact.  Caching has to happen before an admin view.
		if (empty($_SESSION['outlineadmin'])) {
			return $pageHTML;
		}
	}
	
	// If the user logged into the admin section, modify the page
	// content to display a site toolbar and echo it.
	if (!empty($_SESSION['outlineadmin'])) {
		require_once($_SERVER["DOCUMENT_ROOT"]."/lib/inc/global");
		if (checkIfAuth("content", $_SESSION['outlineadmin'], false)) {
				
			require_once($_SERVER["CORE_PATH"]."/web/admin/v3/cms/cmslib");
			require_once($_SERVER["CORE_PATH"]."/web/admin/v3/auth");
		
			$pageHTML = insertOutlineBox($tag, $content["id"], $pageHTML);
		}
		return $pageHTML;
	}
}
?>