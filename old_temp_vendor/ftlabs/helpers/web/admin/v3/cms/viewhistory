<?php
/**
 * CMS history page - displays all versions for a specific page or
 * asset, not including drafts, and provides an interface for
 * comparing versions.
 *
 * Accepted Inputs: (GET) id: id of item to look up the history for.
 * (GET) [makelive]: id of version to mark as live
 *
 * @copyright The Financial Times Limited [All Rights Reserved]
 */

require_once($_SERVER["DOCUMENT_ROOT"]."/lib/inc/global");
require_once("cmslib");

// Error if version control is disabled for this project
if (!cmsIsFunctionalityEnabled("versionhistory")) trigger_error(APPNAME." does not have the correct permissions to use version control.", E_USER_ERROR);

$authuser = ($_SERVER["PHP_AUTH_USER"])?$_SERVER["PHP_AUTH_USER"]:$_SERVER["REMOTE_USER"];

// Config **todo** - get and set the language
$languageisocode = "en";
$formats = $db->query("SELECT dateformat, timeformat FROM out_languages WHERE isocode='".$languageisocode."'");
$formatsrow = $db->fetchrow($formats);
$dateFormat = $formatsrow["dateformat"];
$timeFormat = $formatsrow["timeformat"];

// Retrieve page ID from query string
$addressstring = substr($_SERVER["REQUEST_URI"], 0, (strpos($_SERVER["REQUEST_URI"], "?"))?strpos($_SERVER["REQUEST_URI"], "?"):strlen($_SERVER["REQUEST_URI"]));
if (preg_match("/viewhistory\/([0-9]+)$/", $addressstring, $matches)) {
	$localcontentid = $matches[1];
} else {
	$page->alert("You tried to view a page history, but no id was supplied, or the id was not numeric.  The ID should always be filled in automatically if you followed a link from another page; if you believe you are seeing this in error, please contact support.", "error");
	header("Location: ../index");
	exit;
}

$liveitem = $db->queryRow("SELECT siteid, title, tag, type FROM out_items LEFT JOIN out_localcontent ON out_items.id=out_localcontent.itemid LEFT JOIN out_versions ON out_localcontent.id=out_versions.localcontentid WHERE out_localcontent.id=".$localcontentid." AND islive=1");
if (!$liveitem) trigger_error("Record not found", E_USER_ERROR);


// Save the location of this page for redisplay of index
saveLastSelectedPage($liveitem["tag"]);

// If the "mark an item as live" function is being used, detag all versions and then mark the selected version as live
if (is_numeric($_GET["makelive"])) {
	cmsCheckIfAuth("publish".$type, $liveitem["tag"], $authuser, true, $liveitem["siteid"]);
	$newliveitem = $db->queryRow("SELECT title FROM out_versions WHERE id=".$_GET["makelive"]." AND localcontentid=".$localcontentid);
	if (!$newliveitem) trigger_error("Record not found", E_USER_ERROR);
	
	// If the new title doesn't match the old one, flush the site
	// cache due to navigation changing
	if ($newliveitem["title"] != $liveitem["title"]) {
		outlineDeleteCache($liveitem["siteid"]);

	// Otherwise delete just the cache of this page
	} else {
		outlineDeleteCacheForPage($liveitem["tag"], $languageisocode, $liveitem["siteid"]);
	}

	// Outline extension: run a process following an item being marked as live
	$extendarray = array(&$localcontentid, &$_GET["makelive"]);
	extendCMS("changeLiveVersionForPage", $extendarray);

	$db->query("UPDATE out_versions SET islive=0 WHERE localcontentid=".$localcontentid);
	$db->query("UPDATE out_versions SET islive=1 WHERE id=".$_GET["makelive"]);
	$db->query("INSERT INTO out_actionlog SET versionid=".$_GET["makelive"].", user='".$authuser."', actiontype='change live', comment='', date=NOW()");
}

// Create a new data table
$tb = new datatable("versions", "version", 200, false, false);

// Define columns
$tb->addColumn("icon", "", false, false, 18);
$tb->addColumn("modifiedlong", "Revision date", "DESC");
$tb->addColumn("author", "Revision author", "ASC");
$tb->addColumn("status", "Revision status", "ASC");
$tb->addColumn("comparison", "Revision comparison", "ASC");

// Set default sort-by column
$tb->setSort("modifiedlong");

// Load all non-draft versions of the selected item id
$result = $db->query("SELECT out_versions.id, title, DATE_FORMAT(datecreated, '".$dateFormat." ".$timeFormat."') as modifiedlong, cfg_adminusers.name AS author, islive FROM out_localcontent LEFT JOIN out_versions ON out_localcontent.id=out_versions.localcontentid LEFT JOIN cfg_adminusers ON out_versions.authoruser=cfg_adminusers.htaccessuser WHERE out_localcontent.id=".$localcontentid." AND draftuser IS NULL ORDER BY datecreated DESC");

$rownumber = 0;
while ($row = $db->fetchrow($result)) {
	$rownumber++;
	$row["icon"] = "<img src=\"".$_SERVER["CORE_WEB_ALIAS"]."/admin/v3/img/icons/icon16_page".(($row["islive"])?"":"hidden").".gif\">";
	$row["status"] = (($row["islive"])?"<strong>Currently Live</strong>":"<a href=\"".$_SERVER["ADMIN_AREA_PATH"]."/cms/viewhistory/".$localcontentid."?makelive=".$row["id"]."\">Publish</a>");
	$row["comparison"] = "<a href=\"javascript:void(0);\" onclick=\"olhistory.selectRevision(".$row["id"].", '".$row["modifiedlong"]." by ".$row["author"]."', ".(($rownumber == $db->numresults($result))?"true":"false").", ".(($row["islive"])?"true":"false").", this);\">Select for comparison</a>";

	$tb->addRow($row, false);
	$tb->setCellClass("modifiedlong", "vcenter");
	$tb->setCellClass("author", "vcenter");
	$tb->setCellClass("status", "vcenter");
	$tb->setCellClass("comparison", "vcenter");
}

// Construct the page
$page->addContent("content", $tb->outputTable());
$page->addContent("content", "<style type=\"text/css\">.vcenter { line-height: 1.3em; }</style>");
$page->addContent("context", str_replace("--corealias--", $_SERVER["CORE_WEB_ALIAS"], $page->loadExternalContent("html/historysidebar")));

$page->render();
exit;
?>