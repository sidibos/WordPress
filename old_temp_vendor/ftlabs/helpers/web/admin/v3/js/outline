<?php
if (empty($jsdirectaccess)) {
	header("Cache-Control: must-revalidate");
	header("Content-type: text/javascript");
	$offset = 60 * 60 * 24 * 3;
	header("Expires: " . gmdate("D, d M Y H:i:s", time() + $offset) . " GMT");
}
?>

function OutlineTreeView(hostname, siteroot, versioncontrol, type) {
	this.type = type;
	this.lastrow = -1;
	this.currentrow = -1;
	this.currentallowtask = true;
	this.currenttitle = "";
	this.currenttag = "";
	this.doubleclicktime = 0;
	this.siteroot = siteroot;
	this.hostname = hostname;
	this.versioncontrol = versioncontrol;
	this.isbrowser = false;
	this.extra = "";
}

// Provide a method for extending the cms functionality.  Works in conjunction with
// the global cmsextend object, which is defined in the js file DOCUMENT_ROOT/lib/js/admin.js
// Its properties are functions to be run when this extendCms function is called.
OutlineTreeView.prototype.extendcms = function (propname,arg) {
	if (typeof(cmsextend) != 'object') return false;
	if (typeof(cmsextend[propname]) != 'function') return false;
	return cmsextend[propname](arg);
}

// Provides methods to alter a tree view for use in a browse or link dialog
OutlineTreeView.prototype.changemode = function (mode, modetype, extra) {
	if (mode == "browse") {
		this.isbrowser = true;
		this.browsetype = modetype;
		this.extra = ((extra)?extra:"");
	}
}

// Provides a method to make the document clickable to make the handlers feel more natural
OutlineTreeView.prototype.adddocumenthandler = function() {
	return false;
	//document.body.onclick = oltree.selectrow; TODO - this isn't working yet!  The bubbling even with addeventlistener doesn't seem to work, and selectrow seems to treat "this" as a new instance.
}

// selectrow provides right-hand toolbar changes according to selection,
// as well as deselection and double-click handling
OutlineTreeView.prototype.selectrow = function(e, itemid, title, tag, allowtask, allowsort, allowdel, author, mod, islive) {
	var e = ((e)?e:window.event);
	
	var publiclink = false;
	if (document.getElementById("userinfo") && (this.type == "page")) publiclink = document.getElementById("userinfo").getElementsByTagName("a").item(0);
	
	if (itemid) {
		var currentTime = new Date();
		this.currenttitle = title;
		this.currenttag = tag;
		this.currentallowtask = allowtask;
		if ((this.lastrow == itemid) && ((currentTime.getTime() - this.doubleClickTime) < 750) && allowtask) {
			if (this.isbrowser) {
				parent.selectedItemTag = tag;
				parent.selectedLocalContentID = itemid;
				parent.document.getElementById("selectbutton").click();
			} else {
				window.location.href = "edit?id=" + itemid;
			}
		}
	}

	if (this.currentrow && this.currentrow != -1) {
		document.getElementById("row"+this.currentrow).className=document.getElementById("row"+this.currentrow).className.replace("tdhighlight","tdnormal");
		if (document.getElementById("rowend"+this.currentrow)) document.getElementById("rowend"+this.currentrow).style.display = "none";

	}
	
	if (!itemid || (this.currentrow == itemid)) {
		this.currentrow = -1;
		if (this.isbrowser) {
			parent.document.getElementById("selectbutton").disabled = true;
			parent.document.getElementById("selectbutton").className = "butndisabled";
		} else {
			document.getElementById("pagedetails").style.display = "none";
			document.getElementById("notasks").style.display = "none";
			document.getElementById("action_edit").style.display = "none";
			document.getElementById("action_sort").style.display = "none";
			document.getElementById("action_history").style.display = "none";
			document.getElementById("action_delete").style.display = "none";
		}
		if (publiclink) publiclink.href = "http://"+this.hostname+"/";
		if (!this.isbrowser && (this.type == "page")) document.getElementById("action_add").href="new";
	} else {
		this.lastrow = this.currentrow = itemid;
		document.getElementById("row"+itemid).className = document.getElementById("row"+itemid).className.replace("tdnormal","tdhighlight");
		
		if (this.isbrowser) {
			parent.selectedItemTag = tag;
			parent.selectedLocalContentID = itemid;
			parent.selectedTitle = title;
			parent.document.getElementById('selectbutton').disabled = false;
			parent.document.getElementById('selectbutton').className = "butn";
			if (!allowtask && (this.browsetype != "link")) {
				parent.document.getElementById('selectbutton').disabled = true;
				parent.document.getElementById('selectbutton').className = "butndisabled";
			}
			if (!allowtask) {
				if (document.getElementById("rowend"+itemid)) {
					document.getElementById("rowend"+itemid).style.display = "block";
				} else {
					var enddiv = document.createElement("DIV");
					enddiv.innerHTML = "<div class=\"rowendpopup\" id=\"rowend"+itemid+"\"><div>"+((this.browsetype == "new")?"You do not have permission to create an item in here.":((this.browsetype == "permissions")?"You cannot select this item as you don't have permission to access it.":((this.browsetype == "link")?"Warning: You are linking to a draft or inaccessible page.":"You cannot move a page directly into this item.")))+"</div></div>";
					enddiv.className = "rowendcontainer";
					document.getElementById("row"+itemid).appendChild(enddiv);
				}
			}
		} else {
			document.getElementById("pagedetails").style.display = "block";
			document.getElementById("pagetitle").innerHTML = title;
			document.getElementById("pageauth").innerHTML = author;
			document.getElementById("pagemod").innerHTML = mod;
			document.getElementById("pageextra2").innerHTML = (allowsort)?"<em style=\"display: block; margin-left: 10px;\">This page cannot be deleted as it contains other pages.</em>":"";
			if (this.type == "page") document.getElementById("action_add").href="new?tag="+tag;
			document.getElementById("action_edit").href = "edit?id=" + itemid;
			document.getElementById("action_history").href = "viewhistory/" + itemid;
			document.getElementById("action_sort").href = "sort?id=" + itemid;
			document.getElementById("action_sort").style.display = (allowsort)?"block":"none";
			document.getElementById("action_edit").style.display = (allowtask)?"block":"none";
			document.getElementById("action_history").style.display = (allowtask)?((this.versioncontrol)?"block":"none"):"none";
			document.getElementById("action_delete").style.display = (allowdel)?"block":"none";
			document.getElementById("notasks").style.display = (!allowsort && !allowtask && !allowdel)?"block":"none";
			this.extendcms('treeViewAugmentSideBar',itemid);
		}
		
		if (publiclink) {
			if (islive) publiclink.href = "http://"+this.hostname+"/"+this.siteroot+"/"+tag;
			else publiclink.href = "http://"+this.hostname+"/"+this.siteroot+"/";
		}
	}
	if (itemid) this.doubleClickTime = currentTime.getTime();
	
	// Prevent bubbling - TODO - see adddocumenthandler function for this class
	if (e) e.cancelBubble = true;
	if (e && e.stopPropagation) e.stopPropagation();
}

// submitfordelete prompts the user to confirm a deletion
OutlineTreeView.prototype.submitfordelete = function() {
	if ((this.currentrow != -1) && confirm('Are you sure you want to delete this '+this.type+'?')) {
		window.location.href = "delete?id=" + this.currentrow;
	}
}

// toggledisc controls the disclosure triangles, showing or hiding tree branches
OutlineTreeView.prototype.toggledisc = function(discid) {
	// If the table is empty, show a placeholder and proceed to load
	// the information via xmlhttprequests
	if (!document.getElementById("innerdiv"+discid).innerHTML) {
		document.getElementById("innerdiv"+discid).innerHTML = document.getElementById("waitholder").innerHTML;

		if (window.XMLHttpRequest) var xmlreq = new XMLHttpRequest();
		else if (window.ActiveXObject) var xmlreq = new ActiveXObject("Microsoft.XMLHTTP");

		xmlreq.onreadystatechange = function() {
			if (xmlreq.readyState == 4) {
				if (xmlreq.status == 200) {
					if (!xmlreq.responseXML) {
						alert(xmlreq.responseText);
						return;
					}
					response = xmlreq.responseXML.documentElement;
					localcontentid = response.getElementsByTagName('localcontentid')[0].firstChild.data;
					html = response.getElementsByTagName('html')[0].firstChild.data;
					document.getElementById("innerdiv"+localcontentid).innerHTML = html;
				}
			}
		};
		xmlreq.open("GET", '<?=$_SERVER["CORE_WEB_ALIAS"]?>/admin/v3/cms/xml/indexxml?id='+discid+((this.isbrowser)?"&isbrowser=1&hidedrafts="+((this.browsetype == "link")?"perpage":"all")+"&extra="+this.extra:""), true);
		xmlreq.send(null);
	}
	if (document.getElementById("div"+discid).style.display == "none") {
		document.getElementById("div"+discid).style.display = "block";
		document.getElementById("disc"+discid).className = "disc discon";
	} else {
		document.getElementById("div"+discid).style.display = "none";
		document.getElementById("disc"+discid).className = "disc discoff";
	}
	this.selectrow(false, this.currentrow, this.currenttitle, this.currenttag);
	this.doubleClickTime = 0;
}

// Shows a draft div, fipping the orientation if required
OutlineTreeView.prototype.outlineShowDraftDiv = function(draftid) {
	if (document.getElementById('draftholder'+draftid).offsetTop > 70) {
		document.getElementById('draftdiv'+draftid).className = "draftpopup";
	} else {
		var draftdiv = document.getElementById('draftdiv'+draftid);
		newdiv = draftdiv.cloneNode(true);
		draftdiv.parentNode.removeChild(draftdiv);
		newdiv.className = "draftpopdown";
		newdiv.style.top = document.getElementById('draftholder'+draftid).offsetTop + 14;
		newdiv.style.left = document.getElementById('draftholder'+draftid).offsetLeft - 10;
		newdiv.id = "draftdiv"+draftid;
		document.getElementById('oltree').appendChild(newdiv);
	}			
	document.getElementById('draftdiv'+draftid).style.display = 'block';

}

// Hides a draft div
OutlineTreeView.prototype.outlineHideDraftDiv = function(draftid) {
	document.getElementById('draftdiv'+draftid).style.display = 'none';
}

// Handles browse return according to the type of page
function OutlineHandler(type) {
	this.type = type;
}

OutlineHandler.prototype.browseReturn = function(contentID, fullTag, Title, detailReturned, siteID, siteName, siteRoot) {
	switch(this.type) {
		case "new":
		case "edit":
			if (fullTag == "homepage") fullTag = "";
			document.getElementById("frm"+this.type+"page_parenttag").value = fullTag;
			if (fullTag == "") fullTag = "/";
			else fullTag = fullTag+"/";
			document.getElementById("frm"+this.type+"page_parenttagvis").value = fullTag;
			document.getElementById("frm"+this.type+"page_siteid").value = siteID;
			if (document.getElementById("frm"+this.type+"page_sitename")) document.getElementById("frm"+this.type+"page_sitename").value = siteName;
		break;
		case "link":
			if (fullTag == "homepage") fullTag = "";
			if (fullTag != "") fullTag = fullTag+"/";
			fullTag = "/"+siteRoot+"/"+fullTag;
			document.getElementById('txtUrl').value = fullTag;
			document.getElementById('cmbLinkProtocol').options[4].selected = true; // Set fck protocol to "other".
		break;
		case "permissions":
			if (fullTag == "homepage") fullTag = "";
			if (fullTag != "") fullTag = fullTag+"/";
			document.getElementById("visibletag"+detailReturned).value = "/"+fullTag;
			document.getElementById("tag"+detailReturned).value = fullTag;
			document.getElementById("site"+detailReturned).value = siteID;
			if (document.getElementById("sitename"+detailReturned)) document.getElementById("sitename"+detailReturned).value = siteName;
		break;
		case "other":
			if (fullTag == "homepage") fullTag = "";
			if (fullTag != "") fullTag = fullTag+"/";
			document.getElementById(detailReturned+"visibletag").value = "/"+fullTag;
			document.getElementById(detailReturned+"tag").value = fullTag;
			document.getElementById(detailReturned+"siteid").value = siteID;
			if (document.getElementById(detailReturned+"sitename")) document.getElementById(detailReturned+"sitename").value = siteName;
		break;
	}
}

// Makes a form field an Outline Browse... field only editable via a tree view selection
function outlineMakeBrowseField(ele, type, tagele, siteele, detail, pathapp) {
	var detail = ((detail)?detail:"");
	var pathapp = ((pathapp)?pathapp:"");
	var oldwidth = ele.offsetWidth;
	ele.disabled = true;
	ele.style.width = (ele.offsetWidth - 105)+'px';
	var browsebutton = document.createElement("INPUT");
	browsebutton.type = "button";
	browsebutton.className = "olbrowsebutton";
	browsebutton.value = "Browse...";
	browsebutton.onclick = function() {
		var tag = tagele.value;
		if (!tag) tag = "/";
		window.open(pathapp+"browse/browse?height=370&type="+type+"&tag="+tag+"&siteid="+siteele.value+"&ret="+detail, "Browser", "width=600,height=435,scrollbars=no,toolbar=no,status=yes,resizable=yes,menubar=no,location=no, top="+((screen.availHeight-450)/2)+", left="+((screen.availWidth-600)/2));
	}
	if (ele.nextSibling) ele.parentNode.insertBefore(browsebutton, ele.nextSibling);
	else ele.parentNode.appendChild(browsebutton);
}

// Alters elements on the edit page to make the page feel more responsive
function outlineActivateEditPage() {
	var vismenu = document.getElementById("frmeditpage_visibility");
	var subbtn = document.getElementById("action_submit");
	if (vismenu && subbtn) {
		vismenu.onchange = function() { subbtn.innerHTML = ((vismenu.value == 'visible') || (vismenu.value == 'hidden'))?'Publish':'Save'; }
	}
}

// Confirms a page save-as-draft if necessary, to alert that some fields have been changed which are not asociated with the draft.
function outlineConfirmPageDraft(tag, parenttag, siteid, visibility) {
	var confirmchanges = false;

	if (document.getElementById("frmeditpage_tag") && (document.getElementById("frmeditpage_tag").value != tag)) confirmchanges = true;
	
	if (document.getElementById("frmeditpage_parenttag") && (document.getElementById("frmeditpage_parenttag").value != parenttag)) confirmchanges = true;
	
	if (document.getElementById("frmeditpage_siteid") && (document.getElementById("frmeditpage_siteid").value != siteid)) confirmchanges = true;

	if (document.getElementById("frmeditpage_visibility") && (document.getElementById("frmeditpage_visibility").value != visibility)) confirmchanges = true;
	
	if (confirmchanges) {
		return confirm("This page's tag, location or visiblity has changed, but you are not publishing the page.  These attributes will not be saved with the draft you are changing and so will be lost.\n\nProceed with saving this draft?");
	} else {
		return true;
	}
}

function outlineHistoryRevisionControl() {
	this.selectedrevision = false;
	this.selectedlink = false; // Used to get around FF drawing bug
	
	window.onscroll = document.documentElement.onscroll = this.setControlsOffset;
	this.setControlsOffset();
}

// Reset the history controls to the normal state
outlineHistoryRevisionControl.prototype.reset = function () {
	this.selectedrevision = false;
	document.getElementById("historyoneselection").style.display = "none";
	document.getElementById("historytwoselection").style.display = "none";
	document.getElementById("historynoselection").style.display = "block";
}

// Controls selection and presentation of history viewing for revision selection
outlineHistoryRevisionControl.prototype.selectRevision = function (revid, revtext, islast, islive, ele) {
	if (this.selectedrevision && (revid != this.selectedrevision)) {
		document.getElementById("historyrev2").innerHTML = revtext;
		document.getElementById("historytwoselection").style.display = "block";
		document.getElementById("fileforcomp2input").value = revid;
	} else {
		document.getElementById("fileforcomp1input").value = revid;
		document.getElementById("historyrev1").innerHTML = revtext;
		document.getElementById("historyoneselection").style.display = "block";
		document.getElementById("historynoselection").style.display = "none";
		document.getElementById("historycomparelive").style.display = (islive)?"none":"block";
		document.getElementById("historycompareprevious").style.display = (islast)?"none":"block";
		this.selectedrevision = revid;
	}
	if (ele) {
		this.selectedlink = ele;
		setTimeout("olhistory.selectedlink.blur()", 10); // Workaround for FF drawing bug
	}
}

// Handles keeping the controls visible while scrolling down a potentially long list
outlineHistoryRevisionControl.prototype.setControlsOffset = function() {
	var controls = document.getElementById("historyoneselection");
	if (!controls) return;
	var currentOffset = document.documentElement.scrollTop || document.body.scrollTop; // body for Saf
	currentOffset = currentOffset - 150;
	if (currentOffset < 0) currentOffset = 0;
	
	controls.style.top = currentOffset+'px';
}

function outlineTasksTableGroupHandler() {
	this.currentrow = false;
}

function outlineTasksTableHandler(allowedit, allowretrieve, tablegroup) {
	this.allowretrieve = allowretrieve;
	this.allowedit = allowedit;
	this.tablegroup = tablegroup;
	this.doubleclicktime = 0;
}

// Create a tasks page table click handler
outlineTasksTableHandler.prototype.addHandler = function(versionid, description) {
	var taskrow = document.getElementById("id"+versionid).parentNode.parentNode;
	var thisvar = this;
	taskrow.onclick = function() { thisvar.selectRow(taskrow, description, versionid) };
}

outlineTasksTableHandler.prototype.selectRow = function(taskrow, description, versionid) {
	var currentTime = new Date();
	var tds = false;
	
	if (((currentTime.getTime() - this.doubleclicktime) < 750) && this.allowedit) {
		window.location.href = "edit?id="+versionid+"&type=draft";
		return;
	}

	if (this.tablegroup.currentrow != taskrow) {
		tds = taskrow.getElementsByTagName("td");
		for (var i=0; i<tds.length; i++) {
			tds[i].style.backgroundColor = "rgb(49, 106, 197)";
			tds[i].style.color = "white";
		}
	}

	if (this.tablegroup.currentrow) {
		tds = this.tablegroup.currentrow.getElementsByTagName("td");
		for (var i=0; i<tds.length; i++) {
			tds[i].style.backgroundColor = "";
			tds[i].style.color = "";
		}
	}
	
	if (this.tablegroup.currentrow == taskrow) {
		document.getElementById("draftdetails").style.display = "none";
		document.getElementById("action_draftedit").style.display = "none";
		document.getElementById("action_retrievedraft").style.display = "none";
		document.getElementById("noselection").style.display = "block";
	} else {
		document.getElementById("draftdetails").style.display = "block";
		document.getElementById("draftdesc").innerHTML = description;
		document.getElementById("noselection").style.display = "none";
		if (this.allowedit) {
			document.getElementById("action_draftedit").style.display = "block";
			document.getElementById("action_draftedit").href = "edit?id="+versionid+"&type=draft";
		}
		if (this.allowretrieve) {
			document.getElementById("action_retrievedraft").style.display = "block";
			document.getElementById("action_retrievedraft").href = "tasks?id="+versionid+"&action=retrieve";
		}
	}
	
	if (this.tablegroup.currentrow != taskrow) {
		this.tablegroup.currentrow = taskrow;
	} else {
		this.tablegroup.currentrow = false;
	}

	this.doubleclicktime = currentTime.getTime();
}

function outlineUsersHandler() {
}

outlineUsersHandler.prototype.removeLoc = function(theid) {
	document.getElementById("permissionsdiv").removeChild(document.getElementById("div"+theid));
}

outlineUsersHandler.prototype.addLoc = function(ele) {
	ele.blur();
	idcheck = true;
	newid = 1;
	while (idcheck) {
		if(!document.getElementById("div"+newid)) idcheck = false;
		else newid++;
	}
	
	html = document.getElementById("divnnn").innerHTML;
	while (html.indexOf("nnn") > 0) html = html.replace("nnn", newid);
	
	newdiv = document.createElement("DIV");
	newdiv.className = "form userrow";
	newdiv.id = "div"+newid;
	newdiv.innerHTML = html;
	document.getElementById("permissionsdiv").appendChild(newdiv);
	outlineMakeBrowseField(document.getElementById("visibletag"+newid), 'permissions', document.getElementById("tag"+newid), document.getElementById("site"+newid), newid, '../');
}