<?php
/**
 * Functionality for interrogating MIOD's Yesterdays Indices
 *
 * @codingstandard ftlabs-phpcs
 * @copyright The Financial Times Limited [All Rights Reserved]
 */

require_once __DIR__ . '/pricingquote';
require_once $_SERVER['CORE_PATH'] . '/helpers/http/v1/CachedHTTPRequest';
require_once __DIR__ . '/../../stores/keyvalue/KeyValueAccessInterface';

class YesterdaysIndicesV1 {

	private $_normalizeFloats, $_lookupList, $_keyValueAccess, $_includeImages = false;

	private static $_defaultLookupList = array(
		array('name' => 'FTSE 100', 'wsodIssue' => 572009),
		array('name' => 'S&P 500', 'wsodIssue' => 575769),
		array('name' => 'Eurofirst 300', 'wsodIssue' => 599139),
		array('name' => 'Nikkei 225', 'wsodIssue' => 576473),
		array('name' => 'Shanghai Comp', 'wsodIssue' => 586621),
		array('name' => 'DOW', 'wsodIssue' => 599362),
		array('name' => 'Dax', 'wsodIssue' => 569857),
		array('name' => 'Hang Seng', 'wsodIssue' => 568838)
	);

	public function __construct() {
		$this->_lookupList = static::$_defaultLookupList;
	}

	public function setLookupList($lookupList) {
		$this->_lookupList = $lookupList;
	}

	public function setKeyValueAccess(\KeyValueAccessInterface $keyValueAccess) {
		$this->_keyValueAccess = $keyValueAccess;
	}

	public function setIncludeImages($includeImages) {
		$this->_includeImages = $includeImages;
	}

	private function getSingleChart($wsodIssue) {
		$chartImageRequest = new CachedHTTPRequestV1('http://markets.ft.com/apis/iPhone/v2.0/chart.asp?type=iPad_Index_Sprite&wsodIssues=' . $wsodIssue);
		$chartImageRequest->setCacheMode(CachedHTTPRequestV1::CACHE_LAZY);
		$chartImageRequest->setCacheTTL(1200);
		$chartImageRequest->useMemcache(MemcacheAccessV1::getMemcache());
		$responseObject = $chartImageRequest->send();
		$response = $responseObject->getData();

		if (!isset($response)) {
			throw new AssankaException('WSOD returned invalid data');
		}

		$key = 'YesterdaysIndices:' . $wsodIssue . ':' . sha1($response);

		// If cache manager provided,
		// push the image into the store
		if ($this->_keyValueAccess and !$this->_keyValueAccess->exists($key)) {

			// COMPLEX:MA:20130201 - LB asked me to write some notes:-
			// Set the TTL be a week so that the only case where the
			// image controller won't be able to get this data is if
			// the app tries to download the images a week after the
			// images have been saved - when they problem aren't
			// relevant anymore anyway.
			// The app should be able to handle this gracefully by
			// showing a grey box instead of a loaded image.
			$this->_keyValueAccess->set($key, $response, 604800);
		}

		return $key;
	}

	public function getData() {
		$data = array('as-of' => 'As of '.gmdate('H:i').' GMT, '.gmdate('M j'));

		// Define what data is included:
		$data['yi'] = $this->_lookupList;

		// Fetch the appropriate data
		$numindices = count($data['yi']);
		for ($i = 0; $i < $numindices; $i++) {
			$quote = PricingV1::getQuote($data['yi'][$i]['wsodIssue']);

			// COMPLEX:MA:20120116 Note that it would be nice to use the name from the
			// API call to be consistent with FT.com.  However, the names are not especially
			// consistent with each other.
			if (!isset($data['yi'][$i]['name'])) {
				$data['yi'][$i]['name'] = $quote->get('companyinfo', 'name');
			}

			// Populate the remaining data from the API response:
			$data['yi'][$i]['close'] = $quote->get('snapshot', 'previousclose');
			$data['yi'][$i]['chgpct'] = $quote->get('snapshot', 'chgpct');
			$data['yi'][$i]['chgdir'] = $quote->get('snapshot', 'chgdir');
			$data['yi'][$i]['image'] = $this->getSingleChart($data['yi'][$i]['wsodIssue']);
		}
		return $data;
	}
}

if (!class_exists('YesterdaysIndices')) class_alias('YesterdaysIndicesV1', 'YesterdaysIndices');
